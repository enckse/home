#!/bin/bash
source /etc/voidedtech/skel/env
export GOPATH="$HOME/.cache/go"

IS_SCHROOT=0
if [ ! -z "$SCHROOT_CHROOT_NAME" ]; then
    IS_SCHROOT=1
fi

export IS_SCHROOT

pltidy() {
    local f
    for f in $(git grep "#\!/usr/bin/perl" | cut -d ":" -f 1 | sort); do
       perltidy $f
       mv $f.tdy $f
    done
}

glint() {
    local f
    goimports -l . | grep -v bindata.go | sed 's/^/[goimports]    /g'
    revive ./... | sed 's/^/[revive]       /g'
    for f in $(find . -type f -name "*.go" -exec dirname {} \; | sort -u); do
        go vet $f | sed 's/^/[govet]        /g'
    done
}

sshkeys() {
    local host linked f first cmd check d
    check=1
    cmd=$1
    if [ ! -z "$cmd" ]; then
        if [[ "$cmd" == "check" ]]; then
            check=0
        fi
    fi
    hostname=$(cat /etc/hostname)
    linked=$HOME/.ssh/$hostname
    if [ -d "$linked" ]; then
        rm -f $linked/$hostname
        if [ $(find $linked/ -type f | wc -l) -gt 0 ]; then
            first=1
            for f in $(find $linked/ -type f); do
                chmod 600 $f
            done
            for f in $(find $linked/ -type f -mtime 45); do
                if [ $first -eq 1 ]; then
                    first=0
                    echo "rotate keys"
                fi
                echo "  -> $f"
            done
            if [ $first -eq 0 ]; then
                echo
                echo "> sshkeys"
                echo
            fi
        fi
    fi
    if [ $check -eq 0 ]; then
        # first time setup allowed
        if [ -d "$linked" ]; then
            return
        fi
    fi
    if [ ! -d $linked ]; then
        mkdir $linked
    fi
    d=$(date +%Y%m%d%H%M)
    for f in systems repos tinyssh; do
        ssh-keygen -t ed25519 -N '' -f $linked/$f.$d
        ln -sf $linked/$f.$d $linked/$f
        ln -sf $linked/$f.$d.pub $linked/$f.pub
    done
    echo
    echo
    echo "============================="
    echo "pubkeys update required"
    echo "============================="
    echo
    echo
}

sshkeys check

if [ $IS_SCHROOT -eq 1 ]; then
    PS1='[\u@${SCHROOT_CHROOT_NAME} \W]\$ '
    return
fi

if [ ! -d $HOME/workspace ]; then
    mkdir -p $HOME/workspace
fi

if [ ! -d $HOME/.env/machine ]; then
    echo "no machine profile set"
fi

if [ ! -e ~/.vimrc ]; then
    ln -sf /etc/voidedtech/skel/vimrc ~/.vimrc
fi

if [ ! -d ~/.gnupg ]; then
    ln -sf ~/.private/gnupg ~/.gnupg
fi

_cleanup-dirs() {
    local f check
    check=/tmp/.cleanup.$(date +%Y%m%d)
    if [ -e $check ]; then
        return
    fi
    for f in swap undo backup; do
        find $HOME/.vim/$f -type f -mtime +1 -delete
    done
    touch $check
}

_messaging() {
    systemctl --user enable drudge-session@messaging.service
}

if [ -d "$HOME/.gnupg" ]; then
    export GPG_TTY=$(tty)
    gpg-connect-agent updatestartuptty /bye >/dev/null
else
    echo "no .gnupg dir"
fi

_cleanup-dirs
_messaging
