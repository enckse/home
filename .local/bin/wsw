#!/bin/bash
NETWORKS=/home/enck/store/documents/networks/
LIST="list"
ADAPTERS="wlp58s0 enp0s31f6"
CACHED=/tmp/network
DO_STOP=/tmp/network.cmd
HOME_CACHE=$HOME/.cache/home/tmp/wsw

_networks() {
    for f in $(find $NETWORKS -type f); do
        basename $f
    done
}

_iplink() {
    ip link set $1 $2
    echo "settings $1 -> $2"
}

_change() {
    local filename
    echo "changing to $1"
    filename="$NETWORKS$1"
    if [ ! -e "$filename" ]; then
        echo "$1 is not valid"
        exit 1
    fi
    if [ -z "$1" ]; then
        echo "no file given"
        exit 1
    fi
    echo "$1" > $CACHED
    for a in $(echo "$ADAPTERS"); do
        ip link set $a "down"
    done
    pkill wpa_supplicant
    sleep 3
    device=$(echo "$1" | cut -d "." -f 2)
    flags=""
    echo "$1" | grep -q "^wired."
    if [ $? -eq 0 ]; then
        flags="-D wired"
    fi
    _iplink $device up
    sleep 3
    if [ -s $filename ]; then
        echo "starting supplicant"
        /bin/bash -c "/sbin/wpa_supplicant -B -c $filename -i $device $flags"
    fi
    echo "ready..."
    rm -f $DO_STOP
    while [ ! -e $DO_STOP ]; do
        sleep 1
    done
    pkill wpa_supplicant
    echo "done"
}

_reset() {
	touch $DO_STOP
	sleep 5
}

cmd=$1
if [ -z "$cmd" ]; then
    if [ ! -e $CACHED ]; then
        echo "no network file to read"
        exit 0
    fi
    _change $(cat $CACHED)
else
    case "$cmd" in
        "$LIST")
            _networks
            exit 0
            ;;
        "current")
            if [ -e $CACHED ]; then
                cat $CACHED
            fi
            ;;
        "reload")
            _reset
            if [ -e $CACHED ]; then
                touch $CACHED
            else
                if [ -e $HOME_CACHE ]; then
                    cp $HOME_CACHE $CACHED
                else
                    echo "nothing to reload"
                    exit
                fi
            fi
            ;;
         *)
            _reset
            echo "$cmd" > $CACHED
            echo "$cmd" > $HOME_CACHE
            ;;
    esac
fi
