#!/usr/bin/perl
use strict;
use warnings;
use DateTime::Cron::Simple;
use Sys::Hostname;

my $home      = "/home/enck";
my $configs   = "$home/store/personal/config/etc/block/";
my $tmpdir    = "/tmp/block";
my $hosts     = "/etc/hosts";
my $cache     = "$home/.cache/unblock";
my $max_delta = 60;
my $host      = hostname;

sub get_key {
    my $key = shift @_;
    return $tmpdir . "/$key";
}

sub new_key {
    my $key = `pwgen 64 1`;
    chomp $key;
    my $chars = 5 + int rand(15);
    system("echo 'UNBLOCK KEY IS: $key ($chars)' | tee /var/cache/siteblock.key");
    $key = substr $key, 0, $chars;
    my $key_file = get_key $key;
    return $key_file;
}

sub rebuild {
    my $do_block = shift @_;
    my $new_file = shift @_;
    my $tmpfile  = "$tmpdir/hosts." . `date +%s`;
    chomp $tmpfile;
    system("echo '# THIS FILE IS AUTOGENERATED' > $tmpfile");
    system("echo 127.0.0.1 localhost >> $tmpfile");
    system("echo 127.0.1.1 $host.voidedtech.com $host >> $tmpfile");
    system("cat ${configs}default >> $tmpfile");
    my $local = "${configs}default.$host";
    if ( -e $local ) {
        system("cat $local >> $tmpfile");
    }
    if ($do_block) {
        system("echo '\n# BLOCK LIST' >> $tmpfile");
        for (`cat ${configs}blacklist`) {
            chomp;
            next if !$_;
            my $blocking =
              `echo "127.0.0.1 $_ \$(echo '$_' | cut -d '.' -f 1)"`;
            chomp $blocking;
            system("echo $blocking >> $tmpfile");
        }
    }
    system("chmod 644 $tmpfile");
    system("mv $tmpfile $new_file")
      if system("diff -u $tmpfile $hosts > /dev/null");
}

sub today {
    my $date = `date +%j`;
    chomp $date;
    return $date;
}

sub get_now {
    my $date = `date +%s`;
    chomp $date;
    return $date;
}

sub block_now {
    system("rm -f $cache");
}

sub unblock {
    my $is_ui       = shift @_;
    my $unlock_key  = shift @_;
    my $can_unblock = 0;
    for (`cat ${configs}cron`) {
        chomp;
        next if ( !$_ );
        my $cron  = DateTime::Cron::Simple->new($_);
        my $match = $cron->validate_time;
        $can_unblock = 1 if $match;
    }
    my $do_block = 1;
    if ($can_unblock) {
        if ($is_ui) {
            print "UNLOCK KEY?\n";
            $unlock_key = <STDIN>;
            $unlock_key = get_key $unlock_key;
            system("touch $cache");
        }
        $do_block = 0 if -e $cache;
    }
    else {
        block_now;
    }
    if ($do_block) {
        if ($is_ui) {
            print "can NOT unblock currently\n";
        }
    }
    rebuild( $do_block, $unlock_key );
}

my $command = "";
if (@ARGV) {
    $command = shift @ARGV;
    if ( $command eq "disable" ) {
        unblock( 1, "" );
        exit 0;
    }
    elsif ( $command eq "enable" ) {
        system("rm -f $cache");
        exit 0;
    }
    elsif ( $command eq "status" ) {
        system("clear");
        system("journalctl -t siteblock -e | tail -n 10");
        print "\n";
        system("cat /etc/hosts");
        exit 0;
    }
}

if ( $command ne "daemon" ) {
    print "unknown command: $command\n";
    exit 1;
}

my $update_file = new_key;
my $day         = today;
my $current     = get_now;
my $first       = 1;
while (1) {
    if ( ! -d $tmpdir ) {
        system("mkdir -p $tmpdir");
        system("chmod 777 $tmpdir");
    }
    my $check = today;
    my $delta = get_now - $current;
    my $roll  = $check ne $day;
    if ( $delta >= $max_delta or $first == 1 or $roll ) {
        if ( $roll ) {
            print "day rollover\n";
            $day = $check;
            block_now;
        }
        unblock( 0, $update_file );
        $current = get_now;
        $first = 0;
    }
    if ( -e $update_file ) {
        print "updating hosts\n";
        system("mv $update_file $hosts")
          if system("diff -u $update_file $hosts > /dev/null");
        my $update_file = new_key;
        system("rm -f $tmpdir/*");
    }
    system("sleep 5");
}

