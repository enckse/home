#!/usr/bin/perl
use strict;
use warnings;

my $IS_TRUE     = "true";
my $ENV_NO_WAIT = "CLUSTER_NO_WAIT";

my @nodes  = ( 0, 1, 2, 3, 4, 5, 7 );
my $script = "~/.local/bin/cluster";
my $arg    = "start";

my %mapping;
$mapping{"productivity"} = 1;
$mapping{"webutils"}     = 2;
$mapping{"irc"}          = 3;
$mapping{"armdev"}       = 7;

if (@ARGV) {
    $arg = shift @ARGV;
}

if ( exists( $mapping{$arg} ) ) {
    system("$script ssh $mapping{$arg}");
    exit 0;
}

if ( $arg eq "start" ) {
    my $cmds = join( " ", @ARGV );
    system(
"kitty --detach --start-as=maximized --title=cluster -- $script attach $cmds"
    );
}
elsif ( $arg eq "ready" ) {
    $ENV{$ENV_NO_WAIT} = $IS_TRUE;
    my $idle   = -1;
    my $tmpdir = "/tmp/cluster/";
    mkdir $tmpdir if ! -d $tmpdir;
    system("rm -f $tmpdir*");
    print "finding idle node\n";
    my @readings;
    for my $node (@nodes) {
        my $tmpcpu   = $tmpdir . "$node";
        my $readycpu = $tmpcpu . ".ready"; 
        system("($script ssh $node arm-cpu | sed 's/\$/ $node\\n/g' > $tmpcpu && mv $tmpcpu $readycpu) &");
        push @readings, $readycpu;
    }
    my $count = 0;
    my @next = @readings;
    while (1) {
        my @wait;
        for my $file (@next) {
            if ( ! -s $file ) {
                push @wait, $file;
            }
        }
        @next = @wait;
        if ( scalar(@next) > 0 ) {
            if ( $count > 6 ) {
                last;
            }
            system("sleep 0.5");
        } else {
            last;
        }
        $count++;
    }
    my $option = `cat $tmpdir/* | sort | head -n 1`;
    chomp $option;
    if ( $option ) {
        $idle = `echo $option | cut -d " " -f 2` + 0;
    }
    if ( $idle < 0 ) {
        die "no idle node found";
    }
    system("$script ssh $idle");
}
elsif ( $arg eq "attach" ) {
    system("kitty @ goto-layout grid");
    my $cmds = join( " ", @ARGV );
    for my $node (@nodes) {
        system(
            "kitty @ launch --keep-focus $script ssh $node $cmds > /dev/null");
    }
    system("kitty @ close-window");
}
elsif ( $arg eq "productivity" ) {
    system("$script ssh 1");
}
elsif ( $arg eq "webutils" ) {
    system("$script ssh 2");
}
elsif ( $arg eq "ssh" ) {
    my $node = shift @ARGV;
    my $cmd  = join( " ", @ARGV );
    if ($cmd) {
        $cmd = "-- $cmd";
    }
    my $no_wait = $ENV{$ENV_NO_WAIT};
    my $wait = 1;
    if ( $no_wait and $no_wait eq $IS_TRUE ) {
        $wait = 0;
    }
    system("source ~/.variables && ssh cluster$node.voidedtech.com $cmd");
    if ( $wait == 1 and $cmd) {
        print("\n\n\n");
        system('read -p "ENTER to exit"');
    }
}
elsif ( $arg eq "help" ) {
    my @apps = keys %mapping;
    print "start ready " . join( " ", @apps );
}
