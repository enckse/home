#!/usr/bin/perl
use strict;
use warnings;

my @nodes  = ( 0, 1, 2, 3, 4, 5, 7 );
my $script = "~/.local/bin/cluster";
my $arg    = "start";

my %mapping;
$mapping{"productivity"} = 1;
$mapping{"webutils"}     = 2;

if (@ARGV) {
    $arg = shift @ARGV;
}

if ( exists( $mapping{$arg} ) ) {
    system("$script ssh $mapping{$arg}");
    exit 0;
}

if ( $arg eq "start" ) {
    my $cmds = join( " ", @ARGV );
    system(
"kitty --detach --start-as=maximized --title=cluster -- $script attach $cmds"
    );
    system("kitty @ close-window");
}
elsif ( $arg eq "node" ) {
    if ( system("~/.local/bin/sys online") != 0 ) {
        print "unavailable\n";
        exit 1;
    }
    print "\nfinding idle node\n";
    my $idle    = -1;
    my $data    = "";
    my $options = join( "\n", @nodes );
    for my $node (`echo '$options' | shuf`) {
        chomp $node;
        if ( !$node ) {
            next;
        }
        my $data =
`curl -s http://cluster$node.voidedtech.com:8888/status | grep -E "^(rat|date),"`;
        chomp $data;
        if ($data) {
            my $date =
`echo '$data' | grep '^date,' | cut -d ',' -f 2 | sed 's/^/  -> /g'`;
            chomp $date;
            $data =
              `echo '$data' | grep '^rat,' | sed 's/,/ /g' | sort -k 2 -n`;
            chomp $data;
            system(
                "echo '$data' | awk '{print \"    -> \" \$3 \" (\" \$2 \")\"}'"
            );
            my $low =
`echo '$data' | head -n 1 | cut -d ' ' -f 3 | cut -d '.' -f 1 | sed 's/cluster//g'`;
            chomp $low;
            $idle = $low + 0;
            print "$date\n  -> source: $node\n";
            last;
        }
    }
    if ( $idle < 0 ) {
        die "no idle node found";
    }
    system("$script ssh $idle");
}
elsif ( $arg eq "attach" ) {
    system("kitty @ goto-layout grid");
    my $cmds = join( " ", @ARGV );
    for my $node (@nodes) {
        system(
            "kitty @ launch --keep-focus $script ssh $node $cmds > /dev/null");
    }
    system("kitty @ close-window");
}
elsif ( $arg eq "productivity" ) {
    system("$script ssh 1");
}
elsif ( $arg eq "webutils" ) {
    system("$script ssh 2");
}
elsif ( $arg eq "ssh" ) {
    my $node = shift @ARGV;
    my $cmd  = join( " ", @ARGV );
    if ($cmd) {
        $cmd = "-- $cmd";
    }
    system("source ~/.variables && ssh cluster$node.voidedtech.com $cmd");
    if ($cmd) {
        print("\n\n\n");
        system('read -p "ENTER to exit"');
    }
}
elsif ( $arg eq "help" ) {
    my @apps = keys %mapping;
    print "start node " . join( " ", @apps );
}
