#!/bin/bash
source $HOME/.config/home/common
source $XDG_USER_CONFIG
INDEX_DIR=$MAIL_DIR/Indexed/
INDEXED=${INDEX_DIR}cur/
INDEX_FILE=$USER_TMP/mail.index
ACCOUNTS="fastmail gmail"
MUTTHTML="$USER_TMP/*.mutt.html"
LAST_MAILS=$USER_TMP/mail.last
PREV_MAILS=${LAST_MAILS}.prev

_maildir() {
    local cnt d results first
    first=1
    for d in $(echo "$ACCOUNTS"); do
        cnt=$(find $MAIL_DIR/$d -type f | grep "/$1/" | grep -v "/$2/" | grep -E "/$3/" | wc -l)
        if [ $cnt -gt 0 ]; then
            if [ $first -eq 1 ]; then
                first=0
            else
                results="$results "
            fi
            if [ ! -z "$4" ]; then
                d="$4"
            fi
            results="$results$cnt $d"
            if [ ! -z "$4" ]; then
                break
            fi
        fi
    done
    echo "$results"
}

_mailcount() {
    local results
    results=$(_maildir "new" "Trash" "")
    results="$results "$(_maildir "cur" "Filtered/Automated" "(Filtered|Spam)" "unread")
    echo "$results"
}

_mbsync() {
    local pids purge last now a ts
    pids=$(pidof mbsync)
    if [ -z "$pids" ]; then
        mkdir -p $INDEXED
        mkdir -p ${INDEX_DIR}new
        purge=1
        if [ -e $INDEX_FILE ]; then
            last=$(cat $INDEX_FILE)
            now=$(date -d "15 minutes ago" +%s)
            if [ $last -gt $now ]; then
                purge=0
            fi
        fi
        echo "purging index: $purge"
        if [ $purge -eq 1 ]; then
            rm -f ${INDEXED}*
        fi
        ts=$(date +%Y-%m-%dT%H:%M:%S)
        mbsync -aV | sed "s/^/$ts -> /g"
        if [ $? -ne 0 ]; then
            echo "mbsync failure" >> $VIEW_JOURNAL
        fi
        notmuch new
    else
        echo "mbsync already running ($pids)"
    fi
}

_imapjournal() {
    if [ -e $SYS_ONLINE ]; then
        _mbsync 2>&1 >> ${USER_TMP}mbsync.$(date +%Y-%m-%d).log 
    fi
}

_search() {
    date +%s > $INDEX_FILE
    rm -f ${INDEXED}*
    notmuch search --output=files $@ | sed -e 's: :\\\\ :g' | xargs -r -I searchoutput ln -s searchoutput $INDEXED
}

subcmd="$1"
RUN="run"
if [ -z "$subcmd" ]; then
    subcmd="$RUN"
fi
case "$subcmd" in
    "client")
        if [ -z "$2" ]; then
            echo "account required"
            exit 1
        fi
        touch $TRIGGER_MAIL
        sleep 0.5
        cd $XDG_DOWNLOAD_DIR
        mutt -F $HOME/.mutt/$2.muttrc
        sleep 0.25
        ;;
    "search")
        _search ${@:2}
        ;;
    "connected")
        _imapjournal
        p=$(pidof mutt)
        while [ ! -z "$p" ]; do
            sleep 1
            find .mutt/imap/ | grep -v "\.notmuch" | sort > $LAST_MAILS
            if [ -e $PREV_MAILS ]; then
                diff -u $PREV_MAILS $LAST_MAILS > /dev/null
                if [ $? -ne 0 ]; then
                    echo "mailbox changed"
                    _imapjournal
                fi
            fi
            mv $LAST_MAILS $PREV_MAILS
            p=$(pidof mutt)
        done
        ;;
    "count")
        _mailcount
        ;;
    "$RUN")
        _imapjournal
        ;;
    *)
        echo "unknown command: $1"
        ;;
esac
