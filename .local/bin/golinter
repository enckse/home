#!/usr/bin/python3
import argparse
import os
import shutil
import subprocess


def _files(src, ignores):
    for r, _, files in os.walk(src):
        for f in files:
            if f in ignores:
                continue
            if f.endswith(".go"):
                yield os.path.join(r, f)


def _run(cmd, args, files, required, quiet):
    exists = shutil.which(cmd)
    if not exists:
        if required:
            if not quiet:
                print("{} missing (required)".format(cmd))
            return True
        return False
    errored = False
    first = True
    for f in files:
        p = subprocess.Popen([cmd] + args + [f],
                             stdout=subprocess.PIPE,
                             stderr=subprocess.PIPE)
        out, err = p.communicate()
        for obj in [out, err]:
            if obj:
                if first:
                    if not quiet:
                        print(cmd)
                    first = False
                errored = True
                if not quiet:
                    print(obj.decode("utf-8").strip())
    return errored


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--src", default=".", type=str)
    parser.add_argument("--quiet", action="store_true")
    parser.add_argument("--ignore-files", nargs="+", default=["bindata.go"])
    for tool in ["goimports", "golint"]:
        parser.add_argument("--no-{}".format(tool), action="store_false")
        parser.add_argument("--ignore-{}".format(tool), action="store_true")
        parser.add_argument("--disable-{}".format(tool), action="store_true")
    args = parser.parse_args()
    lint = False
    imports = False
    files = sorted(list(_files(args.src, args.ignore_files)))
    if not args.disable_goimports:
        imports = _run("goimports",
                       ["-l"],
                       files,
                       args.no_goimports,
                       args.quiet) and not args.ignore_goimports
    if not args.disable_golint:
        lint = _run("golint",
                    [],
                    files,
                    args.no_golint,
                    args.quiet) and not args.ignore_golint
    if imports or lint:
        exit(1)


if __name__ == "__main__":
    main()
