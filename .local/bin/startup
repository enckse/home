#!/usr/bin/python3
import common
import os
import vol
import datetime

_VALID_TEXT = ["{} text".format(x) for x in ["ASCII", 
                                             "UTF-8 Unicode",
                                             "ISO-8859"]]

def _cleanup_old(d):
    n = datetime.datetime.now()
    for r, dirs, files in os.walk(d):
        if len(dirs) > 0:
            for directory in d:
                print(os.path.join(r, directory))
        for f in files:
            path = os.path.join(r, f)
            mtime = datetime.datetime.fromtimestamp(os.path.getmtime(path))
            delta = (n - mtime).total_seconds() / 60 / 60
            if delta > 24:
                os.remove(path)


def main():
    env = common.read_env()
    if not os.path.exists(env.USER_TMP):
        os.makedirs(env.USER_TMP)
    _cleanup_old(env.USER_TMP)
    vim_dir = os.path.join(env.HOME, ".vim")
    for d in ["swap", "undo"]:
        _cleanup_old(os.path.join(vim_dir, d))
    if not vol.ismute():
        vol.mute()
    for r, _, files in os.walk(env.MAIL_DIR):
        for f in files:
            path = os.path.join(r, f)
            skip = any([True for x in [".notmuch",
                                       ".uidvalidity",
                                       ".mbsyncstate",
                                       "Trash"] if x in path])
            if skip:
                continue
            out, err = common.get_output_or_error(["file", path])
            if out:
                output = out.decode("UTF-8").strip()
                text = [True for x in _VALID_TEXT \
                        if output.endswith(x) or "{},".format(x) in output]
                if not any(text):
                    print((path, output))
            else:
                if err is not None:
                    print((path, err))
    if not os.path.exists(env.LAST_SYNC):
        print("no recent sync...")


if __name__ == "__main__":
    main()
