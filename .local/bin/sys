#!/usr/bin/perl
use strict;
use warnings;
use autodie;

sub lock_notify {
    my $text = join( "", @_ );
    my $msg  = uc $text;
    system("dunstify -r 1000 -t 10000 'LOCK: $msg'");
}

my $home    = $ENV{"HOME"};
my $no_lock = "$home/.local/tmp/no_lock";
my $cmd;
if (@ARGV) {
    $cmd = shift @ARGV;
}

die "no command" if !$cmd;

if ( $cmd eq "mouse" ) {
    my $cnt = `xrandr | grep " connected" | wc -l` + 0;
    if ( $cnt < 2 ) {
        exit 0;
    }
    my $threshold = 2560;
    my $left      = "1280 720";
    my $right     = "3520 540";
    if ( -e $ENV{"IS_DESKTOP"} ) {
        $threshold = 1440;
        $left      = "720 1000";
        $right     = "2000 720";
    }
    my $position =
      `xdotool getmouselocation | cut -d ':' -f 2 | cut -d ' ' -f 1` + 0;
    chomp $position;
    system("xdotool search . behave %@ mouse-enter windowfocus &");
    system("sleep 0.1");
    if ( $position > $threshold ) {
        system("xdotool mousemove $left");
    }
    else {
        print "HERE\n";
        system("xdotool mousemove $right");
    }
    system("pkill xdotool");
    print $position, "\n";
}
elsif ( $cmd eq "togglelock" ) {
    if ( -e $no_lock ) {
        lock_notify "on";
        unlink $no_lock;
    }
    else {
        lock_notify "off";
        system("touch $no_lock");
    }
}
elsif ( $cmd eq "lock" or $cmd eq "suspend" or $cmd eq "xautolock" ) {
    if ( -e $no_lock ) {
        lock_notify "disabled";
        exit 0;
    }
    my $suspend = 0;
    if ( $cmd eq "suspend" or $cmd eq "xautolock" ) {
        $suspend = 1;
    }
    if ($suspend) {
        if ( !-e $ENV{"IS_LAPTOP"} ) {
            if ( $cmd eq "suspend" ) {
                exit 0;
            }
            $suspend = 0;
        }
    }

    system("i3lock -c 333333");
    if ($suspend) {
        system("sleep 0.1");
        system("systemctl suspend");
    }
}
elsif ( $cmd eq "autoclip" ) {
    system("source $home/.local/env/vars && pass -c autoclip > /dev/null");
}
else {
    print "unknown command";
}
