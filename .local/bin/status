#!/bin/bash
source $HOME/.config/home/common
STAT_GIT=${USER_TMP}/stats.git
GIT_PARTIAL_PATTERN="weechat|random_seed"
STAT_LOCK=${USER_TMP}/stat.lock

_get-git-folders() {
    local res f d
    res=""
    for d in "$HOME/workspace" "${PERM_LOCATION}" "$HOME/local"; do
        for f in $(find $d -maxdepth 1 -type d | sort); do
            if [ ! -d "$f/.git" ]; then
                continue
            fi
            res=$res" "$f/
        done
    done
    echo $res
}

get-all-changes() {
    git update-index -q --refresh 
    git diff-index --name-only HEAD --
    git status -sb | grep 'ahead'
    git ls-files --other --exclude-standard
}

git-changing() {
    local cwd d_paths d local_res first
    cwd=$PWD
    d_paths="/etc $HOME "$(_get-git-folders)
    for d in $(echo "$d_paths"); do
        if [ ! -d "$d/.git" ]; then
            continue
        fi
        cd $d
        local_res=$(get-all-changes | grep -E -v "$GIT_PARTIAL_PATTERN")
        if [ ! -z "$local_res" ]; then
            if [ -z $first ]; then
                echo "uncommitted changes"
            fi
            echo -e "$d${RED_TEXT}"
            echo -e "$local_res${NORM_TEXT}" | sed "s/^/    /g"
            first="false"
        fi
    done
    cd $cwd
}

_up() {
    curl -s https://voidedtech.com > /dev/null
    if [ $? -eq 0 ]; then
        touch $SYS_ONLINE
    else
        rm -f $SYS_ONLINE
    fi
}

_unread() {
    local cnt raw res
    raw=$($HOME_BIN/email count)
    cnt=$(echo "$raw" | cut -d " " -f 1)
    if [ -z "$raw" ]; then
        echo
    else
        echo "$raw"
    fi
}

_checkgit() {
    local _git_cnt
    git-changing > $GIT_CHANGES
    _git_cnt=$(cat $GIT_CHANGES | grep "    " | wc -l)
    if [ $_git_cnt -gt 0 ]; then
        echo "$_git_cnt HEAD^"
    else
        echo
    fi
}

stats() {
    rm -f $STAT_LOCK
    touch $STAT_LOCK
    _checkgit > $STAT_GIT
    rm -f $STAT_LOCK
}

if [ -z "$1" ]; then
    while [ 1 -eq 1 ]; do
        stats
        sleep 2
    done
else
    case "$1" in
        "git")
            while [ -e $STAT_LOCK ]; do
                sleep 0.1
            done
            cat ${STAT_GIT} | tail -n 1
            ;;
        "online")
            _up > /dev/null 2>&1 &
            ;;
        "email")
            _unread
            ;;
        *)
            echo "unknown command: $1"
            ;;
    esac
fi
