#!/usr/bin/perl
use warnings;
use strict;
use File::Compare;
use File::Copy qw(move);
use autodie;

my $bat_path       = "/sys/class/power_supply/BAT";
my $no_status      = "/tmp/nostatus";
my $home           = $ENV{"HOME"};
my $battery_notice = $ENV{"NOTIFY_MESSAGES"} . "/battery";

sub create_status() {
    my $date   = `date +%Y-%m-%d`;
    my $week   = `date +%a | tr '[:lower:]' '[:upper:]'`;
    my $time   = `date +%H:%M`;
    my $bright = `brightness status`;
    my $locked = `locker status`;
    if ($locked) {
        $locked = "|$locked";
    }
    my $vol      = `volume status`;
    my $bat_stat = "";
    my $bat      = 0;
    for ( ( 0, 1 ) ) {
        my $bat_cur = `acpi | grep "Battery $_:" | cut -d "," -f 2`;
        chomp $bat_cur;
        if ($bat_cur) {
            $bat_cur =~ s/ //g;
            $bat_cur =~ s/%//g;
            if ($bat_stat) {
                $bat_stat = "$bat_stat,";
            }
            $bat_stat = "$bat_stat$bat_cur";
            $bat      = $bat + $bat_cur;
        }
    }
    my $warning = 0;
    my $charge  = `status charging`;
    if ( $charge ne "+" ) {
        if ( $bat < 20 ) {
            $warning = 1;
            system("echo 'battery:LOW' > $battery_notice");
        }
    }
    system("rm -f $battery_notice") if $warning == 0;
    my $online = system("wsw online") ? "DOWN" : "UP";
    my $addr   = `wsw addr`;
    my $status =
"$date|$week|$time$locked|disp:$bright|vol:$vol|bat:$bat_stat$charge|$online:$addr";
    $status =~ s/\n//g;
    system("xsetroot -name '$status'");
}

if (@ARGV) {
    my $command = $ARGV[0];
    if ( $command eq "displays" ) {
        my $display_cache = $home . "/.cache/displays";
        my $prev_cache    = $display_cache . ".prev";
        system("xrandr | grep ' connected' | cut -d ' ' -f 1 > $display_cache");
        system("touch $prev_cache");
        my $cmp = compare( $display_cache, $prev_cache );
        move $display_cache, $prev_cache;
        if ( $cmp != 0 ) {
            my $workspace = `cat $prev_cache | wc -l` > 1 ? " docked" : "";
            system("workspaces$workspace");
        }
    }
    elsif ( $command eq "charging" ) {
        my $charge = "-";
        if ( `cat /sys/class/power_supply/AC/online` == "1" ) {
            $charge = "+";
        }
        print $charge;
    }
    elsif ( $command eq "toggle" || $command eq "sleep" ) {
        my $change = "on";
        if ( -e "$no_status" || $command eq "sleep" ) {
            system("rm -f $no_status");
        }
        else {
            $change = "off";
            system("touch $no_status");
        }
        if ( $command ne "sleep" ) {
            system("notify-send -t 5000 'notifications: $change'");
        }
    }
    elsif ( $command eq "mail" ) {
        exit if system("wsw online");
        exit if system("wsw status") != 0;
        my $mail_files = "/tmp/mail";
        if ( !-d $mail_files ) {
            mkdir $mail_files;
        }
        my $time = `date +%Y-%m-%d-%H-`;
        chomp $time;
        $time .= `date +%M` >= 30 ? "30" : "00";
        $mail_files = $mail_files . "/$time";

        unless ( system("pgrep -x mutt > /dev/null") ) {
            system("rm -f $mail_files");
            exit;
        }
        exit if -e "$mail_files";
        system("sys mail");
        system("touch $mail_files");
    }
    elsif ( $command eq "notify" ) {
        if ( not -e $no_status ) {
            system("perl $home/.local/lib/notify.pl");
        }
    }
    elsif ( $command eq "line" ) {
        create_status;
    }
    elsif ( $command eq "cleanup" ) {
        my $cleanup = `date +%Y-%m-%d`;
        chomp $cleanup;
        my $cleanup_dir = "/tmp/cleanup/";
        if ( !-d $cleanup_dir ) {
            mkdir $cleanup_dir;
        }
        $cleanup = $cleanup_dir . $cleanup;
        exit if -e $cleanup;
        for ( ( "undo", "swap", "backup" ) ) {
            system("find $home/.vim/$_/ -type f -mtime +1 -exec rm {} \\;");
        }
        system("touch $cleanup");
    }
    exit;
}

my $cnt = 1;
while (1) {
    system("status line");
    $cnt++;
    if ( $cnt >= 5 ) {
        system("status notify &");
        system("status mail &");
        system("status cleanup &");
        $cnt = 0;
    }
    system("status displays &");
    sleep 5;
}
