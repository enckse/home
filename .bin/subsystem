#!/bin/bash
source $HOME/.bin/displays
source $HOME/.bin/sound
source $HOME/.bin/workspaces
source $HOME/.bin/common
DISPLAY_KEY="display"
VOLUME_KEY="volume"
DISPLAY_TOGGLE="toggle"
DISPLAY_CHANGE="change"
SOUND_COMMAND="sound"
CYCLE_WORKSPACE="cycle"
WORKSPACES_KEY="workspaces"
PROF_KEY="profiles"
SYS_STATS_KEY="sys-stats"
SYS_STATS_ENABLE="enable"
SYS_STATS_ON="on"
SYS_STATS_OFF="off"
SYS_STATS_TOGGLE="toggle"
DPMS_KEY="dpms"
ALL_AVAILBLE="$DISPLAY_KEY $VOLUME_KEY $WORKSPACES_KEY $SYS_STATS_KEY"
HELP="help"
PROFILE_DEF=${USER_TMP}/profile.next

function get-help()
{
    echo "commands"
    echo "--------"
    echo
    for item in $ALL_AVAILBLE; do
        case $item in
            $DISPLAY_KEY)
                get-lighting-help $item $DISPLAY_TOGGLE $DISPLAY_CHANGE $DPMS_KEY $PROF_KEY
                ;;
            $VOLUME_KEY)
                get-volume-help $item $SOUND_COMMAND
                ;;
            $WORKSPACES_KEY)
                get-workspace-help $item $CYCLE_WORKSPACE
                ;;
            $SYS_STATS_KEY)
                get-sys-stats-help $item
                ;;
        esac
    done
}

function get-sys-stats-help()
{
    echo "
    $1 $SYS_STATS_ENABLE $SYS_STATS_ON (system stats on) 
    $1 $SYS_STATS_ENABLE $SYS_STATS_OFF (system stats off)
    $1 $SYS_STATS_ENABLE $SYS_STATS_TOGGLE (system stats toggling) 
"
}

if [ -z "$1" -o -z "$2" -o -z "$3" ]; then
    HEADER="subsystem, command, and value required ($1 and $2 and $3 ?)"
    if [ ! -z "$1" ]; then
        if [[ "$1" == "$HELP" ]]; then
            HEADER=""
        fi
    fi
    
    if [ ! -z "$HEADER" ]; then
        echo $HEADER
        echo
    fi
    
    get-help
    exit -1
fi

# Workspace commands
function workspace-subsystem()
{
    case $1 in
        $CYCLE_WORKSPACE)
            change-workspace "$2"
            ;;
        *)
            echo "Unknown workspaces request: $1"
            exit -1
            ;;
    esac
}

# Display commands
function display-subsystem()
{
    case $1 in
        $DISPLAY_TOGGLE)
            toggle-backlighting "$2"
            ;;
        $DISPLAY_CHANGE)
            change-brightness "$2"
            ;;
        $DPMS_KEY)
            toggle-dpms "$2"
            ;;
        $PROF_KEY)
            cycle-profiles "$2"
            ;;
        *)
            echo "Unknown display command $1"
            exit -1
    esac
}

# Volume commands
function volume-subsystem()
{
    case $1 in
        $SOUND_COMMAND)
            change-volume "$2"
            ;;
        *)
            echo "Unknown volume command $1"
            exit -1
    esac
}

# System stats management
function sys-stats-subsystem()
{
    ACTION=$2
    if [[ "$ACTION" == "$SYS_STATS_TOGGLE" ]]; then
        if [ -e $USER_STATS_ON ]; then
            ACTION=$SYS_STATS_OFF
        else
            ACTION=$SYS_STATS_ON
        fi
    fi
    case $1 in
        $SYS_STATS_ENABLE)
            case $ACTION in
                $SYS_STATS_ON)
                    touch $USER_STATS_ON
                    ;;
                $SYS_STATS_OFF)
                    rm -f $USER_STATS_ON
                    ;;
            esac
            ;;
        *)
            echo "Unknown sys stats command $1"
            ;;
    esac
}

function cycle-profiles()
{
    if [[ "$1" == "$PROFILE_CYCLE" ]]; then
        full_backlight="full"
        mid_backlight="mid"
        low_backlight="low"
        use_profile=$full_backlight
        if [ -e $PROFILE_DEF ]; then
            use_profile=$(cat $PROFILE_DEF)
        fi
        
        next_back=""
        case $use_profile in
            $full_backlight)
                subsystem display change full
                next_back=$mid_backlight
                ;;
            $low_backlight)
                change-brightness $LOW_BRIGHT
                ;;
            $mid_backlight)
                change-brightness $MID_BRIGHT
                next_back=$low_backlight
                ;;
        esac

        rm -f $PROFILE_DEF
        if [ ! -z $next_back ]; then
            echo $next_back > $PROFILE_DEF
        fi
    else 
        echo "Unknown profile action $1 $2"
    fi
}

case $1 in
    $DISPLAY_KEY)
        CMD=display-subsystem
        ;;
    $VOLUME_KEY)
        CMD=volume-subsystem
        ;;
    $WORKSPACES_KEY)
        CMD=workspace-subsystem
        ;;
    $SYS_STATS_KEY)
        CMD=sys-stats-subsystem
        ;;
    *)
        echo "Unknown action $1"
        ;;
esac

if [ ! -z $CMD ]; then
    $CMD "$2" "$3"
fi
