#!/bin/bash
source $HOME/.bin/common
DISPLAY_KEY="display"
DISPLAY_TOGGLE="toggle"
DISPLAY_CHANGE="change"
WORKSPACES_KEY="workspaces"
FORCE_WORKSPACE="force"
HELP="help"
BACKLIGHT_ON="up"
BACKLIGHT_OFF="down"
FULL_BRIGHT="full"
LOW_BRIGHT="low"
MID_BRIGHT="mid"
MAIN_DISPLAY="eDP1"
DISP_ONE="DP2-2"
DISP_TWO="DP2-1"
DEFAULT_WORKSPACE_ID=1
DOCKED_ID=2
WORK_COMMON_LEFT="--output $DISP_ONE --auto --left-of $MAIN_DISPLAY --rotate right"
WORK_COMMON_RIGHT="--output $DISP_TWO --auto --right-of $MAIN_DISPLAY"
HOME_COMMON_RIGHT="--output $DISP_ONE --auto --right-of $MAIN_DISPLAY --rotate right"
HOME_COMMON_LEFT="--output $DISP_TWO --auto --left-of $MAIN_DISPLAY"
HOME_WORKPLACE_ID=3
TRACK_LIGHTING=$USER_TMP/.backlight

function force-display-on()
{
    xset -display $MAIN_DISPLAY dpms force on
}

function get-lighting-help()
{
    echo "
    $1 $2 $BACKLIGHT_ON (toggle backlights ON)
    $1 $2 $BACKLIGHT_OFF (toggle backlights OFF)
    $1 $3 $LOW_BRIGHT (low brightness)
    $1 $3 $MID_BRIGHT (medium brightness)
    $1 $3 $FULL_BRIGHT (full brightness)"
}

# Get displays, first argument can filter out any displays
function get-displays()
{
    get-all-displays " "
}

function get-all-displays()
{
    xrandr | grep "${1}connected" | cut -d " " -f 1
}

# Toggle backlighting up/down to a specified level
function toggle-backlighting()
{
    local _action _current _displays setting
    if [ ! -e $TRACK_LIGHTING ]; then
        echo "$MID_BRIGHT" > $TRACK_LIGHTING
    fi

    _action=$1
    _current=$(cat $TRACK_LIGHTING)
    case $1 in
        $BACKLIGHT_ON)
            if [[ "$_current" == "$LOW_BRIGHT" ]]; then
                _action=$MID_BRIGHT
            else
                _action=$FULL_BRIGHT
            fi
            ;;
        $BACKLIGHT_OFF)
            if [[ "$_current" == "$FULL_BRIGHT" ]]; then
                _action=$MID_BRIGHT
            else
                _action=$LOW_BRIGHT
            fi
            ;;
    esac
    if [[ "$_action" != "$1" ]]; then
        echo "$_action" > $TRACK_LIGHTING
    fi

    case $_action in
        $FULL_BRIGHT)
            setting=1.0
            ;;
        $LOW_BRIGHT)
            setting=0.3
            ;;
        $MID_BRIGHT)
            setting=0.9
            ;;
        *)
            echo "Unknown command $1"
            ;;
    esac
    
    if [ ! -z "$setting" ]; then
        _displays=$(get-displays)
        for disp in ${_displays[@]}; do
            xrandr --output $disp --brightness $setting
        done
    fi
}

function set-workplace()
{
    ALL_DISPLAYS=$(get-all-displays | grep -v "$MAIN_DISPLAY")
    has_side=0
    for disp in $ALL_DISPLAYS; do
        xrandr --output $disp --off
        xrandr | grep -q "^$disp connected"
        if [ $? -eq 0 ]; then
            has_side=1
        fi
    done
    xrandr --output $MAIN_DISPLAY --primary --auto
    use_setting=$1
    if [ $has_side -eq 0 ]; then
        use_setting=$DEFAULT_WORKSPACE_ID
    fi
    i3_commands tray_reload 
    case $use_setting in
        $DOCKED_ID)
            xrandr $WORK_COMMON_LEFT
            xrandr $WORK_COMMON_RIGHT
            ;;
        $HOME_WORKPLACE_ID)
            xrandr $HOME_COMMON_RIGHT
            xrandr $HOME_COMMON_LEFT
            ;;
    esac
    toggle-backlighting $MID_BRIGHT
    if [ $1 -eq $use_setting ]; then
        i3 restart
    fi
}

# Workspace help
function get-workspace-help()
{
    echo "
    $1 $2 $DEFAULT_WORKSPACE_ID (force default workspace)
    $1 $2 $DOCKED_ID (force docked workspace)
    $1 $2 $HOME_WORKPLACE_ID (change to home workspace)
    "
}

function force-workplace()
{
    set-workplace $1
    xsetroot -solid "#333333"
}

function get-help()
{
    echo "commands"
    echo "--------"
    get-lighting-help "$DISPLAY_KEY" $DISPLAY_TOGGLE $DISPLAY_CHANGE
    get-workspace-help $WORKSPACES_KEY $FORCE_WORKSPACE
}

# Workspace commands
function workspace-subsystem()
{
    local has_main cmd
    has_main=$(get-all-displays | grep "^$MAIN_DISPLAY$")
    cmd=$1
    if [ -z "$has_main" ]; then
        echo "MISSING MAIN DISPLAY: $MAIN_DISPLAY"
        cmd=""
    fi
    case $cmd in
        $FORCE_WORKSPACE)
            force-workplace "$2"
            ;;
        *)
            echo "Unknown workspaces request: $1"
            exit -1
            ;;
    esac
}

# Display commands
function display-subsystem()
{
    case $1 in
        $DISPLAY_TOGGLE | $DISPLAY_CHANGE)
            toggle-backlighting "$2"
            ;;
        *)
            echo "Unknown display command $1"
            exit -1
    esac
}

if [[ "${BASH_SOURCE[0]}" != "${0}" ]]; then
    echo > /dev/null
else
    if [ -z "$1" -o -z "$2" -o -z "$3" ]; then
        get-help
        exit 1
    fi
    case $1 in
        $DISPLAY_KEY)
            CMD=display-subsystem
            ;;
        $WORKSPACES_KEY)
            CMD=workspace-subsystem
            ;;
        *)
            echo "Unknown action $1"
            ;;
    esac
    if [ ! -z $CMD ]; then
        $CMD "$2" "$3"
    fi
fi
