#!/bin/bash
source $HOME/.bin/common
COMMON_STORE=/mnt/Storage/Active/
PROFILE_PATH=${COMMON_STORE}Rolling/profiles
REPO_PATH=${COMMON_STORE}Repository/
ARCHIVE=$USER_TMP/profile.tar.gz
SPACING="    "
SSH_AUTH_TMP=/tmp/ssh-auth.sock
TODAY=$(date +%Y-%m-%d)
BACKUP=$PROFILE_TMP$TODAY
GIT_SYNC=$USER_TMP/.git.sync
GIT_PREV=${GIT_SYNC}.prev
REPO_HASH=$USER_TMP/repo.hashed
REPO_PREV=$REPO_HASH.prev
READY="ready"
IS_CONNECTED=1
NOT_CONNECTED=0
HOME_REPO=${HOME_CACHE}repo/

test-ssh() {
    local running
    running=$(ssh -o BatchMode=yes -o ConnectTimeout=5 $1 echo $READY 2>&1)
    if [[ "$running" == "$READY" ]]; then
        echo $IS_CONNECTED
    else
        echo $NOT_CONNECTED
    fi
}

_dobackup() {
    if [ -e "$BACKUP" ]; then
        echo 0
    else
        echo 1
    fi
}

_dorepo() {
    local hashed prev
    prev=""
    hashed=$(sha256sum ${HOME_REPO}* | cut -d " " -f 1 | sort | sha256sum | cut -d " " -f 1)
    echo "$hashed" > $REPO_HASH
    if [ -e $REPO_PREV ]; then
        prev=$(cat $REPO_PREV)
    fi
    if [[ "$hashed" == "$prev" ]]; then
        echo 0
    else
        echo 1
    fi
}

_backup() {
    echo "daily backup"
    if [ ! -e $ARCHIVE ]; then
        echo "archiving"
        tar zcf $ARCHIVE $HOME/.mozilla/ --exclude="${HOME_PERSONAL}.git" $HOME_PERSONAL &>/dev/null
        echo "archive completed: $?"
    fi
    echo "${SPACING}pushing profile out"
    scp $ARCHIVE $BASE_SERVER:$PROFILE_PATH/mobile.$TODAY.tar.gz
    ssh $BASE_SERVER "find $PROFILE_PATH -type f -mtime +30 -exec rm {} \;"
    rm -f $ARCHIVE
    touch $BACKUP
}

_repository() {
    echo "repository"
    rsync -avc --delete-after -e "ssh" $HOME_REPO $BASE_SERVER:$REPO_PATH | grep -v "^$" | sed "s/^/$SPACING/g"
    if [ -e $REPO_HASH ]; then
        mv $REPO_HASH $REPO_PREV
    fi
}

_dogit() {
    local d changes
    echo "git" > $GIT_SYNC
    for d in $(echo "$@"); do
        git -C "$d" log --pretty=format:'%h' -n 1 >> $GIT_SYNC
        echo ": $d" >> $GIT_SYNC
    done
    changes=1
    if [ -e "$GIT_PREV" ]; then
        diff -u $GIT_PREV $GIT_SYNC > /dev/null
        if [ $? -eq 0 ]; then
            changes=0
        fi
    fi
    echo $changes
}

_gitpush() {
    local d
    echo "syncing..."
    for d in $(echo "$@"); do
        echo "$d"
        git -C "$d" push 2>&1 | sed "s/^/$SPACING/g"
    done
    if [ -e $GIT_SYNC ]; then
        mv $GIT_SYNC $GIT_PREV
    fi
}

_emails() {
    local p
    p=$(pidof mutt)
    if [ -z "$p" ]; then
        $HOME_BIN/email
    fi
}

sync-now() {
    local dirs pushgit pushrepo pushbackup
    _emails &
    dirs=$(ls ${PERM_LOCATION} | grep personal | sed "s#^#$PERM_LOCATION#g")
    dirs="$dirs ${SYNCED_PATH} /etc $HOME/.config/docs"
    pushgit=$(_dogit "$dirs" | tail -n 1)
    pushrepo=$(_dorepo | tail -n 1)
    pushbackup=$(_dobackup | tail -n 1)
    echo "status (git: $pushgit, repo: $pushrepo, zip: $pushbackup)"
    if [ $pushgit -eq 0 ]; then
        if [ $pushrepo -eq 0 ]; then
            if [ $pushbackup -eq 0 ]; then
                exit 0
            fi
        fi
    fi
    auth=$(cat $SSH_AUTH_TMP)
    export SSH_AUTH_SOCK=$auth
    available=$(test-ssh $BASE_SERVER)
    echo "====================="
    echo "running "$(date +%Y-%m-%dT%H:%M:%S)
    echo "====================="
    echo "checked for connection...$available"
    if [ $available -eq $IS_CONNECTED ]; then
        if [ -e $SSH_AUTH_TMP ]; then
            if [ $pushgit -eq 1 ]; then
                _gitpush "$dirs"
            fi
            if [ $pushbackup -eq 1 ]; then
                _backup
            fi
            if [ $pushrepo -eq 1 ]; then
                _repository
            fi
            echo "local sync completed"
        else
            echo "ssh agent unavailable"
        fi
    fi
}

sleep 15
sync-now | systemd-cat -t "sync"
