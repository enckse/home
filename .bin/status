#!/bin/bash
source $HOME/.bin/common
GIT_PARTIAL_PATTERN="weechat|random_seed"
GIT_PARTIAL_TMP=$USER_TMP/.git-partial

_get-git-folders() {
    local res f
    res=""
    for f in $(find $1 -type d | sort); do
        if [ ! -d "$f/.git" ]; then
            continue
        fi
        res=$res" "$f
    done
    echo $res
}

_get-workspace-objs() {
    _get-git-folders "$HOME/workspace/"
}

_get-perm-objs() {
    _get-git-folders "${PERM_LOCATION} -maxdepth 2"
}

update-git() {
    if [ ! -e $GIT_CHANGES ]; then
        git-changing > $GIT_CHANGES
    fi
}

_brightness() {
    local b
    b=$(xrandr --current --verbose | grep "Brightness" | \
        cut -d ":" -f 2 | sed "s/0\.//g" | sed "s/1\.0/100/g" | \
        tail -n 1 | awk '{printf "%3.0f", $1}' | sed "s/^[ \t]*//g")
    printf '\xf0\x9f\x94\x86 %3i' $b    
}

_battery() {
    local charging charge val b _path _bat val combined v
    charging=$(cat /sys/class/power_supply/AC/online)
    charge="-"
    if [ $charging -eq 1 ]; then
        charge="+"
    fi
    val=""
    for b in $(echo '0 1'); do
        _path='/sys/class/power_supply/BAT'$b'/capacity'
        if [ -e $_path ]; then
            _bat=$(cat $_path)
            val="$val,$_bat"
        fi
    done
    val=$(echo "$val" | sed "s/^,//g")
    combined=0
    for v in $(echo $val | sed "s/,/ /g"); do
        combined=$((combined+v))
    done
    if [ $combined -lt 20 ]; then
        if [[ "$charge" == "-" ]]; then
            notify-send --urgency=critical Battery "low"
        fi
    fi
    printf '\xf0\x9f\x94\x8b (%3s)%s' $val $charge
}

_sound() {
    local icon level
    icon="\xf0\x9f\x94\x8a"
    if [[ $(pamixer --get-mute) == 'true' ]]; then
        icon='\xf0\x9f\x94\x87'
    fi
    level=$(pamixer --get-volume)
    printf "$icon %3i" $level
}

get-all-changes() {
    git update-index -q --refresh 
    git diff-index --name-only HEAD --
    git status -sb | grep 'ahead'
    git ls-files --other --exclude-standard
}

git-changing() {
    local cwd d_paths d local_res first
    cwd=$PWD
    d_paths="/etc $HOME $SYNCED_PATH $HOME_PERSONAL "$(_get-perm-objs)" "$(_get-workspace-objs)
    for d in $(echo "$d_paths"); do
        if [ ! -d "$d/.git" ]; then
            continue
        fi
        cd $d
        local_res=$(get-all-changes)
        if [ -e "$GIT_PARTIAL_TMP" ]; then
            local_res=$(echo "$local_res" | grep -E -v "$GIT_PARTIAL_PATTERN")
        fi
        if [ ! -z "$local_res" ]; then
            if [ -z $first ]; then
                echo "uncommitted changes"
            fi
            echo -e "$d${RED_TEXT}"
            echo -e "$local_res${NORM_TEXT}" | sed "s/^/    /g"
            first="false"
        fi
    done
    touch $GIT_PARTIAL_TMP
    cd $cwd
}

_up() {
    local result last t n res check
    check=30
    res=$USER_TMP/.online.status
    last=$USER_TMP/.online
    if [ -e $res ]; then
        if [[ $(cat $res) == "offline" ]]; then
            check=5
        fi
    else
        rm -f $last
    fi
    if [ -e $last ]; then
        t=$(cat $last)
        n=$(date +%s)
        t=$((n-t))
        if [ $t -gt $check ]; then
            rm -f $last
        fi
    fi
    if [ ! -e $last ]; then 
        curl -s https://voidedtech.network > /dev/null
        if [ $? -eq 0 ]; then
            echo "online" > $res
            touch $SYS_ONLINE
        else
            echo "offline" > $res
            rm -f $SYS_ONLINE
        fi
        date +%s > $last
    fi
    if [[ $(cat $res) == "online" ]]; then
        result='\xf0\x9f\x94\xb5'
    else
        result='\xf0\x9f\x94\xb4'
    fi
    printf "$result"
}

_unread() {
    local cnt
    cnt=0
    if [ -e $MAIL_COUNT ]; then
        cnt=$(cat $MAIL_COUNT)
    fi
    printf "%3s \xf0\x9f\x93\xa7" "$cnt"
}

stats() {
    local _last_git _git_text _last_cnt _partial bright muting bat disp up emails
    _last_git=0
    _git_text=""
    _last_cnt=0
    _partial=0
    while [ 1 -eq 1 ]; do
        sleep 0.1
        _partial=$((_partial+1))
        if [ $_partial -lt 5 ]; then
            continue
        fi
        _partial=0
        if [ $_last_git -eq 0 ]; then
            _git_cnt=0
            if [ -e $GIT_CHANGES ]; then
                _git_cnt=$(cat $GIT_CHANGES | grep "    " | wc -l)
            else
                _git_cnt=$_last_cnt
            fi
            _last_cnt=$_git_cnt
            _git_text=$(printf "$_last_cnt \xe2\xb8\x99")
            update-git &
        fi
        bright=$(_brightness)
        muting=$(_sound)
        bat=$(_battery)
        disp=$(${HOME_BIN}locking status)
        up=$(_up)
        emails=$(_unread)
        echo "$_git_text|$emails|$bright|$muting|$bat|$disp|$up|" > $MAIN_STATS
        _last_git=$((_last_git+1))
        if [ $_last_git -eq 1 ]; then
            _last_git=0
        fi
    done
}

stats
