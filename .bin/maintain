#!/bin/bash
MY_HOME=/home/enck/
source ${MY_HOME}.bin/common
CONF_HOME=${HOME_CONF}home
PKG_QUERY=$USER_TMP/package.query
PACKAGE_SET=${CONF_HOME}/packages
WEECHAT_PLUGINS=${USER_TMP}/weechat.plugins
IGNORED_PACKAGES="glib2"
PACKAGE_GROUPS="
i3
xorg
base-devel
"
BOOTED=/tmp/user.booted-$(uptime -s | sed "s/ /-/g;s/:/-/g")
if [ ! -e $BOOTED ]; then
    echo "booting up..."
    for f in $(echo "wget-hsts python_history esd_auth lesshst"); do
        fname=${MY_HOME}$f
        echo "deleting app file: $fname"
        rm -f $fname
    done
    for f in $(echo "$DISPLAY_UN $DISPLAY_EN $SND_MUTE $NET_SLEEP $PKG_QUERY"); do
        echo "deleting tmp file: $f"
        rm -f $f
    done
    for f in $(find $USER_TMP -type f | grep "${PROFILE_TMP}"); do
        echo "deleting profile: $f"
        rm -f $f
    done
    touch $BOOTED
fi

function weechat-logs()
{
    local logs
    logs=$USER_TMP/weechat/
    mkdir -p $logs
    running=$(pidof weechat)
    if [ -z "$running" ]; then
        echo "cleaning up weechat logs"
        for f in $(find $HOME/.weechat/logs/ -type f); do
            fname=${logs}$(basename $f)
            cat $f | grep -v -E "^[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9] [0-9][0-9]:[0-9][0-9]:[0-9][0-9][[:space:]]+(<|-)-" > $fname
            cp $f $fname.$(date +%s)
            mv $fname $f
        done
        if [ ! -e $WEECHAT_PLUGINS ]; then
            touch $WEECHAT_PLUGINS
            echo "downloading latest scripts"
            for p in $(echo "buffer_autoset autosort"); do
                tmpfile=$USER_TMP/$p.py
                curl -s https://www.weechat.org/files/scripts/$p.py > $tmpfile
                if [ ! -s "$tmpfile" ]; then
                    continue
                fi
                diff -u $MY_HOME/.weechat/python/$p.py $tmpfile > /dev/null
                if [ $? -ne 0 ]; then
                    echo "$p weechat plugin updated ($tmpfile)" | systemd-cat -p err -t maintain
                fi
            done
        fi
    fi
}

function last-done()
{
    local found d f
    found=0
    for s in $(seq 0 6); do
        d=$(date -d "$s days ago" +%Y-%m-%d)
        f=$1.$d
        if [ -e $f ]; then
            touch $f
            found=1
            break
        fi
    done
    if [ $found -eq 0 ]; then
        echo "missing: $1"
    fi
}

function check-timed-events()
{
    echo "checking timed events"
    for f in $(echo "$USER_SYNC $PERM_PUSH $PERM_PULL"); do
        last-done $f | systemd-cat -p err -t "maintain"
    done
}

function set-user-files()
{
    echo "set user files"

    # user tmp
    mkdir -p $USER_TMP
    find $USER_TMP* -mtime +1 -type f -exec rm {} \;
    find $USER_TMP -empty -type d -delete

    for f in $(find $USER_TMP -type f -mmin +30 | grep "dmenu"); do
        rm -f $f
    done

    # vim
    for v in $(echo "undo swap"); do
        vim_dir=$HOME/.vim/$v
        mkdir -p $vim_dir
        find $vim_dir -mmin +1440 -type f -exec rm {} \;
    done
    
    # packages
    if [ ! -e $PKG_QUERY ]; then
        running=$(pidof pacman)
        if [ -z "$running" ]; then
            /usr/bin/pacman -Qqe | grep -v -E "$IGNORED_PACKAGES" > $PACKAGE_SET
            echo "$PACKAGE_GROUPS" >> $PACKAGE_SET
            touch $PKG_QUERY
        fi
    fi
}

function process-logs()
{
    echo "checking pacman status"
    pacman-check | systemd-cat -p err -t "maintain"
}

function outdated()
{
    local d
    d=$(date -d "$1" +%s)
    weekago=$(date -d "1 week ago" +%s)
    if [ $d -lt $weekago ]; then
        echo "outdated? $2 ($1)"
    fi
}

function check-pacman-update()
{
    local d weekago f
    f=$1/var/log/pacman.log
    d=$(cat $f | grep $(date +%Y) | cut -d " " -f 1 | cut -d "[" -f 2 | sort | uniq | tail -n 1)
    outdated "$d" "$f"
}

function pacman-check()
{
    pacman -Qm
    check-pacman-update ""
    check-pacman-update "$CHROOT_LOCATION/root"
}

function daily()
{
    local f
    f=$USER_TMP/maintain.$(date +%Y-%m-%d)
    if [ ! -e $f ]; then
        touch $f
        echo "running daily checks..."
        process-logs
        check-timed-events
    fi
}

weechat-logs
set-user-files
daily
