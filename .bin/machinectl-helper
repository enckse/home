#!/bin/bash
ETC_NSPAWN=/etc/systemd/nspawn/
BASE_CONF=${ETC_NSPAWN}base.template
LOCATION=/var/lib/machines/
SPAWN_KEY="spawn"
REM_KEY="remove"
PACK_KEY="pack"

CONT_PATH=${LOCATION}$2
CONT_CONF=$ETC_NSPAWN$2".nspawn"

function print-help()
{
    echo "
    $SPAWN_KEY (create a new container)
    $REM_KEY (force remove a container)
    $PACK_KEY (pack a container)
"
}

if [ $UID -ne 0 ]; then
    if [ -z "$1" ]; then
        print-help
    else
        echo "must be run as root..."
    fi
    exit -1
fi

function create()
{
    if [ -d $CONT_PATH ]; then
        echo "$CONT_PATH already exists..."
        exit -1
    fi
    if [ -e $CONT_CONF ]; then
        echo "$CONT_CONF already exists..."
        exit -1
    fi
    mkdir $CONT_PATH
    pacstrap -i -c -d $CONT_PATH base git vim base-devel
    ln -s $BASE_CONF $CONT_CONF
}

function is-running()
{
    machinectl status $1 &> /dev/null
    if [ $? -eq 0 ]; then
        echo "$1 is running..."
        exit -1
    fi
}

function remove()
{
    is-running $1
    if [ -d $CONT_PATH ]; then
        rm -rf $CONT_PATH
    fi

    if [ -e $CONT_CONF ]; then
        rm -f $CONT_CONF
    fi
}

function pack()
{
    is-running $1
    if [ ! -d $CONT_PATH ]; then
        echo "not a valid container..."
        exit -1
    fi
    SAVE_TO=$PWD
    echo $SAVE_TO/pack.tar.gz
    cd $LOCATION
    tar -czvpf $SAVE_TO/pack.tar.gz --one-file-system "$1/"
    cd $SAVE_TO
}

case $1 in
    $SPAWN_KEY)
        create $2
        ;;
    $REM_KEY)
        remove $2
        ;;
    $PACK_KEY)
        pack $2
        ;;
esac
