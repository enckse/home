#!/bin/bash
source $HOME/.bin/common
source $HOME/.bin/displays
WORKPLACE_WORKING=$USER_TMP/working
DISPLAY_UN=/tmp/display-unlock
DISPLAY_EN=/tmp/display-enabled
WORKSPACE_START="startup"
WORKSPACE_RELOAD="reload"
WORKSPACE_CHANGE="change"
BACKGROUND_IMAGE=$HOME/.config/images/background.png
DEFAULT_WORKSPACE_ID=1
DOCKED_ID=2
DISP_HOLDER="DISPLAY_VALUE"
WORK_COMMON_LEFT="--output $DISP_HOLDER --auto --left-of $MAIN_DISPLAY --rotate right"
WORK_COMMON_RIGHT="--output $DISP_HOLDER --auto --right-of $MAIN_DISPLAY"
NAME_COMMAND="naming"
OPEN_COMMAND="open"

function replace-and-execute()
{
    VAL="xrandr "$(echo "$1" | sed "s/$DISP_HOLDER/$2/g")
    eval $VAL
}

function set-workplace()
{
    use_dpi=192
    ALL_DISPLAYS=$(get-all-displays | grep -v "$MAIN_DISPLAY")
    for disp in $ALL_DISPLAYS; do
        xrandr --output $disp --off
    done
    xrandr --output $MAIN_DISPLAY --primary --auto 
    case $2 in
        $DOCKED_ID)
            use_dpi=144
            replace-and-execute "$WORK_COMMON_LEFT" "$DISP_ONE"
            replace-and-execute "$WORK_COMMON_RIGHT" "$DISP_TWO"
            ;;
    esac
    xrandr --dpi $use_dpi
}

# Workspace help
function get-workspace-help()
{
    WORKSPACE_NAMES=""
    for idx in $(seq $DEFAULT_WORKSPACE_ID $MAX_WORKSPACE); do
        NAMED=$(set-workplace $NAME_COMMAND $idx)
        WORKSPACE_NAMES=$WORKSPACE_NAMES"
    $1 $3 $idx (load $NAMED)"
    done
    echo "
    $1 $2 $WORKSPACE_START (workspace startup/setup)
    $1 $2 $WORKSPACE_RELOAD (reload current workspace setup)
    $1 $2 $WORKSPACE_CHANGE (change the current workspace setup)
    $WORKSPACE_NAMES
    "
}

# Change/toggle workspaces
function change-workspace()
{
    WORKSPACE_NUM=$DEFAULT_WORKSPACE_ID
    if [ -e $WORKPLACE_WORKING ]; then
        WORKSPACE_NUM=$DOCKED_ID
        rm -f $WORKPLACE_WORKING
    else
        touch $WORKPLACE_WORKING
    fi
    force-workplace $WORKSPACE_NUM
}

function force-workplace()
{
    set-workplace $OPEN_COMMAND $1
    i3 restart
    if [ -e $BACKGROUND_IMAGE ]; then
        feh --bg-fill $BACKGROUND_IMAGE
    else
        xsetroot -solid "#333333"
    fi
}
