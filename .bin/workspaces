#!/bin/bash
source $HOME/.bin/common
source $HOME/.bin/displays
source $HOME/.bin/i3-common
WORKPLACE_FILE=$USER_TMP/workplace
DISPLAY_UN=/tmp/display-unlock
DISPLAY_EN=/tmp/display-enabled
LAYOUT_DELIM=":"
WORKSPACE_DOCK="dock"
WORKSPACE_NORM="mobile"
WORKSPACE_START="startup"
WORKSPACE_RELOAD="reload"
WORKSPACE_CHANGE="change"
BACKGROUND_IMAGE=$HOME/.cache/background.png

# Workspace help
function get-workspace-help()
{
    echo "
    $1 $2 $WORKSPACE_START (workspace startup/setup)
    $1 $2 $WORKSPACE_RELOAD (reload current workspace setup)
    $1 $2 $WORKSPACE_CHANGE (change the current workspace setup)
    "
}

# Change/toggle workspaces
function change-workspace()
{
    CURRENT=$WORKSPACE_NORM
    case $1 in
        $WORKSPACE_START)
            AUX=$(get-aux-displays)
            echo "$AUX" | grep -q "^[A-Z]"
            if [ $? -eq 0 ]; then
                CURRENT=$WORKSPACE_DOCK
            fi
            ;;
        $WORKSPACE_RELOAD | $WORKSPACE_CHANGE)
            if [ -e $WORKPLACE_FILE ]; then
                CURRENT=$(cat $WORKPLACE_FILE)
            fi

            if [[ "$1" == "$WORKSPACE_RELOAD" ]]; then
                toggle-dpms $DPMS_OFF
            else
                if [[ "$CURRENT" == "$WORKSPACE_NORM" ]]; then
                    CURRENT=$WORKSPACE_DOCK
                else
                    CURRENT=$WORKSPACE_NORM
                fi
            fi
            ;;
    esac
    
    echo $CURRENT > $WORKPLACE_FILE
    synclient TouchpadOff=1
    if [[ "$CURRENT" == "$WORKSPACE_DOCK" ]]; then
        enable-displays
    else
        disable-displays
    fi

    i3 restart
    if [ -e $BACKGROUND_IMAGE ]; then
        feh --bg-fill $BACKGROUND_IMAGE
    else
        xsetroot -solid "#333333"
    fi
    toggle-dpms $DPMS_ON
}
