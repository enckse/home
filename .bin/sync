#!/bin/bash
source $HOME/.bin/common
DUMP_TO=${SYNCED_PATH}config.dump.lock
DUMP_TO_OUT=${SYNCED_PATH}configurations.aes
CACHE_KEY=$HOME/.cache/crypt.key
PREV_CHECKS=$USER_TMP/configs.prev
CRNT_CHECKS=$USER_TMP/configs.crnt
DO_ZIPPING=0
SETUP="--install"
GIT_IGNORE=${SYNCED_PATH}.gitignore

function get-change-dirs()
{
    for d in $(find ${SYNCED_PATH} -type d | sort); do
        for f in $(find ${d}* -type f | sort); do
            f_name=$(echo "$f" | cut -c${#SYNCED_PATH}- | cut -c2-)
            cat $GIT_IGNORE | grep -q "$f_name"
            if [ $? -ne 0 ]; then
                echo $f
            fi
        done
    done
}

function check-changes()
{
    res=$DO_ZIPPING
    rm -f $CRNT_CHECKS
    for f in $(get-change-dirs); do
        sha256sum $f >> $CRNT_CHECKS
    done
    if [ -e $PREV_CHECKS ]; then
        diff $PREV_CHECKS $CRNT_CHECKS > /dev/null
        res=$?
    else
        res=2
    fi
    mv $CRNT_CHECKS $PREV_CHECKS
    echo $res
}

function zip-configs()
{
    echo "zipping configs ($DUMP_TO)..."
    for f in $(get-change-dirs); do
        7z a $DUMP_TO $f > /dev/null
    done
    echo "encrypting configs ($DUMP_TO_OUT)..."
    # call with -d to decrypt
    openssl aes-256-cbc -salt -in $DUMP_TO -out $DUMP_TO_OUT -kfile $HOME/.cache/crypt.key
    rm -f $DUMP_TO
}

function sync-now()
{
    SYNC_TO="sync"
    available=$(test-ssh "$SYNC_TO")
    echo "====================="
    echo "running "$(date +%Y-%m-%dT%H:%M:%S)
    echo "====================="
    echo "checked for connection...$available"
    if [ $available -eq $IS_CONNECTED ]; then
        if [ ! -e $CACHE_KEY ]; then
            echo "missing crypt key for caching config ($CACHE_KEY)..."
            exit -1
        fi
        do_zip=$(check-changes)
        echo "do zipping? $do_zip"
        if [ $do_zip -ne $DO_ZIPPING ]; then
            zip-configs
        fi
        rsync -avzc --exclude "*.lock" --exclude ".gitignore" --exclude "*/" --delete-after ${SYNCED_PATH} -e ssh $SYNC_TO:~/Sync/
    fi
}

function install()
{
    sudo systemctl enable $HOME/.bin/sys/sync.timer
    sudo ln -s $HOME/.bin/sys/sync.service /etc/systemd/system/sync.service
    sudo systemctl start sync.timer
}

case $1 in
    $SETUP)
        install
        ;;
    *)
        sync-now | systemd-cat -t "sync"
        ;;
esac
