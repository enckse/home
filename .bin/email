#!/bin/bash
source $HOME/.bin/common
INDEX_DIR=$MAIL_DIR/Indexed/
INDEXED=${INDEX_DIR}cur/
INDEX_FILE=$USER_TMP/mail.index
MAIL_CONFIG=${PERM_DOCS}/mail/
ACCOUNTS="fastmail gmail"
MUTTHTML="$USER_TMP/*.mutt.html"

_mailcount() {
    local process cnt folders f d
    source $PRIV_CONF
    folders=""
    process=0
    for d in $(echo "$ACCOUNTS"); do
        for f in $(cat ${MAIL_CONFIG}$d.muttrc | sed "s/^mailboxes //g" | sed "s/+//g" | sort); do
            cnt=$(find $MAIL_DIR/$d/$f/new -type f | wc -l)
            process=$((process+cnt))
            if [ $cnt -gt 0 ]; then
                folders="$folders $d"
            fi
        done
    done
    echo "$process$folders"
}

_mailsync() {
    local last now cnt
    now=$USER_TMP/mailstatus.current
    cnt=$(_mailcount | cut -d " " -f 1)
    if [ -e $now ]; then
        last=$(cat $now)
        if [ $cnt -gt $last ]; then
            notmuch new
        fi
    fi
    echo "$cnt" > $now
}

_mbsync() {
    local pids purge last now a
    pids=$(pidof mbsync)
    if [ -z "$pids" ]; then
        mkdir -p $INDEXED
        mkdir -p ${INDEX_DIR}new
        purge=1
        if [ -e $INDEX_FILE ]; then
            last=$(cat $INDEX_FILE)
            now=$(date -d "15 minutes ago" +%s)
            if [ $last -gt $now ]; then
                purge=0
            fi
        fi
        >&2 echo "purging index: $purge"
        if [ $purge -eq 1 ]; then
            rm -f ${INDEXED}*
        fi
        mbsync -aV 
        if [ $? -ne 0 ]; then
            echo "mbsync failure" | systemd-cat -p err -t "mbsync"
        fi
        _mailsync
        touch $UPDATE_STATS
    else
        >&2 echo "mbsync already running ($pids)"
    fi
}

_imapjournal() {
    if [ -e $SYS_ONLINE ]; then
        _mbsync 2>&1 | systemd-cat -t "mailsync"
    fi
}

_search() {
    date +%s > $INDEX_FILE
    rm -f ${INDEXED}*
    notmuch search --output=files $@ | sed -e 's: :\\\\ :g' | xargs -r -I searchoutput ln -s searchoutput $INDEXED
}

if [ -z "$1" ]; then
    _imapjournal
else
    case "$1" in
        "client")
            if [ -z "$2" ]; then
                echo "account required"
                exit 1
            fi
            _imapjournal &
            sleep 0.5
            cd $HOME/Downloads
            mutt -F $HOME/.mutt/$2.muttrc
            touch $CHECK_MAIL
            ;;
        "search")
            _search ${@:2}
            ;;
        "count")
            _mailcount
            ;;
        *)
            echo "unknown command: $1"
            ;;
    esac
fi
