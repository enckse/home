#!/bin/bash
source $HOME/.bin/common
MAIL_DIR=$HOME/.mutt/imap/
INDEX_DIR=$MAIL_DIR/Indexed/
INDEXED=${INDEX_DIR}cur/
INDEX_FILE=$USER_TMP/mail.index
_mailsync() {
    local process cnt last now f
    now=$USER_TMP/mailstatus.current
    process=0
    source $PRIV_CONF
    for f in $(cat ${HOME_PERSONAL}.muttrc | sed "s/^mailboxes //g" | sed "s/+//g"); do
        cnt=$(find $MAIL_DIR$f/new -type f | wc -l)
        process=$((process+cnt))
    done
    if [ -e $now ]; then
        last=$(cat $now)
        if [ $process -gt $last ]; then
            notmuch new
            notify-send Mail "unread messages ($process)"
        fi
    fi
    echo "$process" > $now
}

_offlineimap() {
    local pids purge last now
    pids=$(pidof -x offlineimap)
    if [ -z "$pids" ]; then
        mkdir -p $INDEXED
        purge=1
        if [ -e $INDEX_FILE ]; then
            last=$(cat $INDEX_FILE)
            now=$(date -d "15 minutes ago" +%s)
            if [ $last -gt $now ]; then
                purge=0
            fi
        fi
        >&2 echo "purging index: $purge"
        if [ $purge -eq 1 ]; then
            rm -f ${INDEXED}*
        fi
        offlineimap -c ${SYNCED_PATH}mail/imap.conf
        _mailsync
    else
        >&2 echo "offlineimap already running ($pids)"
    fi
}

_imapjournal() {
    if [ -e $SYS_ONLINE ]; then
        _offlineimap 2>&1 | systemd-cat -t "offlineimap"
    fi
}

_search() {
    date +%s > $INDEX_FILE
    rm -f ${INDEXED}*
    notmuch search --output=files $@ | sed -e 's: :\\\\ :g' | xargs -r -I searchoutput ln -s searchoutput $INDEXED
}

if [ -z "$1" ]; then
    _imapjournal
else
    case "$1" in
        "client")
            _imapjournal &
            sleep 0.5
            cd $HOME/Downloads
            mutt -e "push '<change-folder-readonly>'$INDEX_DIR'<enter>'"
            ;;
        "search")
            _search ${@:2}
            ;;
        *)
            echo "unknown command: $1"
            ;;
    esac
fi
