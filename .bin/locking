#!/bin/bash
source $HOME/.bin/common
source $HOME/.bin/subsystem
LOCK_KEYWORD="lock"
SUSP_KEYWORD="sleep"
TGL_KEYWORD="toggle"
AUTO_KEYWORD="auto"
FORCE_KEYWORD="force"
SLEEP_AFTER=600
LAST_MON=$USER_TMP/monitors.hashed

function write-log()
{
    echo "$1" | systemd-cat -t "locking"
}

function get-i3lock()
{
    pidof i3lock | cut -d " " -f 1
}

function lock-now()
{
    local PID IRC
    if [ ! -z "$1" ] && [[ "$1" == $FORCE_KEYWORD ]]; then
        write-log "force-lock:$1"
        rm -f $DISPLAY_UN
    fi
    if [ ! -e $DISPLAY_UN ]; then
        write-log "going to lock"
        PID=$(get-i3lock)
        if [ -z $PID ]; then
            write-log "locking..."
            IRC=$(pidof weechat)
            if [ ! -z "$IRC" ]; then
                write-log "disconnecting $IRC"
                kill -10 $IRC
            fi
            PID=$(get-i3lock)
            write-log "i3lock pid: $PID"
            if [ -z "$PID" ]; then
                write-log "starting i3lock"
                for p in $(pidof i3lock); do
                    kill $p
                done
                i3lock -c 333333
            fi
            write-log "polling mode"
            PID=$(get-i3lock)
            toggle-backlighting $BACKLIGHT_OFF
            while [ ! -z $PID ];
            do
                PID=$(get-i3lock)
                sleep 1
            done
            write-log "unlocking..."
            toggle-backlighting $MID_BRIGHT
        fi
    fi
}

function hash-monitors()
{
    xrandr  | grep " connected" | sha1sum  | cut -d " " -f 1
}

function suspend-now()
{
    local pass_keyword SLEEP_COUNT PID current_hash
    pass_keyword=""
    if [ -z "$1" ]; then
        write-log "forcing"
        pass_keyword=$FORCE_KEYWORD
    fi
    lock-now "$pass_keyword" &
    if [ ! -e $DISPLAY_UN -a ! -e $DISPLAY_EN ]; then
        mute
        rm -f $PROFILE_DEF
        SLEEP_COUNT=0
        if [ -z "$1" ]; then
            SLEEP_COUNT=$SLEEP_AFTER
        fi
        write-log "sleep setting: $SLEEP_COUNT"
        PID=""
        while [ -z $PID ]; do
            PID=$(get-i3lock)
        done
        sleep 1
        while [ 1 -eq 1 ]; do
            if [ $SLEEP_COUNT -ge $SLEEP_AFTER ]; then
                write-log "sleeping..."
                SLEEP_COUNT=0
                hash-monitors > $LAST_MON
                systemctl suspend
                break
            fi
            sleep 1
            SLEEP_COUNT=$((SLEEP_COUNT+1))
            PID=$(get-i3lock)
            if [ -z $PID ]; then
                break
            fi
        done
        current_hash=$(hash-monitors)
        if [ -e $LAST_MON ]; then
            if [[ "$current_hash" != "$(cat $LAST_MON)" ]]; then
                subsystem workspaces force 1
            fi
        fi
        pkill wsw-applet
        write-log "done sleeping"
    fi
}

function auto-lock-suspend()
{
    suspend-now "auto"
}

function toggle-locking()
{
    local no_action
    no_action=0
    if [ -e $DISPLAY_UN ]; then
        rm $DISPLAY_UN
        touch $DISPLAY_EN
        no_action=1
    fi

    if [ $no_action -eq 0 ]; then
        if [ -e $DISPLAY_EN ]; then
            rm $DISPLAY_EN
            no_action=1
        fi
    fi

    if [ $no_action -eq 0 ]; then
        touch $DISPLAY_UN
    fi
}

function print-help()
{
    echo "
    $LOCK_KEYWORD (lock)
    $SUSP_KEYWORD (sleep)
    $TGL_KEYWORD (toggle lock/sleep availability)
    $AUTO_KEYWORD (auto lock/sleep)
    $FORCE_KEYWORD (force lock)
"
}

case $1 in
    $FORCE_KEYWORD)
        lock-now "$FORCE_KEYWORD"
        ;;
    $LOCK_KEYWORD)
        lock-now
        ;;
    $SUSP_KEYWORD)
        suspend-now
        ;;
    $TGL_KEYWORD)
        toggle-locking
        ;;
    $AUTO_KEYWORD)
        auto-lock-suspend
        ;;
    *)
        print-help
        ;;
esac
