#!/bin/bash
source $HOME/.bin/common
source ${HOME_BIN}subsystem
DISPLAY_UN=$USER_TMP/display.unlocked
DISPLAY_EN=$USER_TMP/display.nosleep
IS_TRUE=1
IS_FALSE=0
RESULT="RESULT:"
get-i3lock() {
    pidof i3lock | cut -d " " -f 1
}

_lock() {
    local p running started slept first delta
    echo "locking"
    i3lock -c 333333
    for p in $(pidof weechat); do
        kill -10 $p
    done
    toggle-backlighting $BACKLIGHT_OFF
    running=$IS_TRUE
    first=$IS_TRUE
    started=$(date +%s)
    slept=$1
    while [ $running -eq $IS_TRUE ]; do
        sleep 1
        if [ $first -eq $IS_FALSE ]; then
            if [ -z $(get-i3lock) ]; then
                running=$IS_FALSE
            else
                delta=$(date +%s)
                delta=$((delta-started))
                if [ $slept -eq $IS_TRUE ]; then
                    delta=1000
                fi
                if [ $delta -ge 300 ]; then
                    echo "sleeping..."
                    p=$(sleep-now $IS_FALSE | grep "^$RESULT" | sed "s/$RESULT//g")
                    if [ $p -eq $IS_TRUE ]; then
                        started=$(date +%s)
                        slept=$IS_FALSE
                    fi
                fi
            fi
        fi
        first=$IS_FALSE
    done
    toggle-backlighting $MID_BRIGHT
}

_autolock() {
    local waiting
    lock-now $IS_TRUE &
    sleep 1
    waiting=$IS_TRUE
    while [ $waiting -eq $IS_TRUE ]; do
        if [ -z $(get-i3lock) ]; then
            waiting=$IS_FALSE
            break
        fi
        sleep 1
    done
}

_sleeping() {
    local start delta
    start=$(date +%s)
    _systemstop
    echo "suspending"
    systemctl suspend
    sleep 5
    echo "done sleeping"
    delta=$(date +%s)
    delta=$((delta-start))
    if [ $delta -ge 3600 ]; then
        ${HOME_BIN}wsw reload
        touch $USER_TMP/.status.reset
    fi
}

sleep-now() {
    local auto
    auto=$1
    if [ -e $DISPLAY_EN ]; then
        echo "nosleep"
        echo "$RESULT$IS_FALSE"
    else
        if [ $auto -eq $IS_TRUE ]; then
            _autolock
            echo "$RESULT$IS_FALSE"
        else
            _sleeping
            echo "$RESULT$IS_TRUE"
        fi
    fi
}

lock-now() {
    if [ -e $DISPLAY_UN ]; then
        echo "nolock"
    else
        if [ -z $(get-i3lock) ]; then
            _lock $1
        fi
    fi
}

toggle() {
    local no_action
    no_action=0
    if [ -e $DISPLAY_UN ]; then
        rm $DISPLAY_UN
        touch $DISPLAY_EN
        no_action=1
    fi

    if [ $no_action -eq 0 ]; then
        if [ -e $DISPLAY_EN ]; then
            rm $DISPLAY_EN
            no_action=1
        fi
    fi

    if [ $no_action -eq 0 ]; then
        touch $DISPLAY_UN
    fi
}

setting() {
    if [ -e $DISPLAY_UN ]; then
        echo "ulock"
    else
        if [ -e $DISPLAY_EN ]; then
            echo "nozzz"
        else
            echo "xauto"
        fi
    fi
}

_status() {
    local color text
    color=""
    if [ -e $DISPLAY_UN ]; then
        text="UNLOCKED"
        color="00"
    else
        if [ -e $DISPLAY_EN ]; then
            text="NO ZZZ"
            color="FF"
        fi
    fi
    if [ ! -z "$text" ]; then
        echo '" '$text' ", "color": "#FF'$color'00"'
    fi
}

locking() {
    case $1 in
        "toggle")
            toggle
            ;;
        "lock")
            lock-now $IS_FALSE
            ;;
        "sleep")
            sleep-now $IS_TRUE
            ;;
    esac
}

if [ ! -z "$1" ]; then
    if [[ "$1" == "status" ]]; then
        _status
        exit 0
    fi
fi

locking "$1" | systemd-cat -t "locking"
