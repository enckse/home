#!/bin/bash
source $HOME/.bin/common
PASSWORD_KEY="passwords"
REBUILD_KEY="rebuild"
DMENU_LOCAL_KEY="dmenu-local"
AUTO_CLIP_KEY="auto-clip"
DMENU_APPS="vlc termite pavucontrol $PASSWORD_KEY"
BROWSER_WINDOW="Developer"
WSW_CYCLE_KEY="wsw-cycle"
CACHE_PATH=${HOME_CACHE}helper_cache/
PASS_FILE=${SYNCED_PATH}passwords

function cycle-wsw()
{
    local active new
    new=3
    active=$(wsw --command active 2>&1 | cut -d " " -f 2 | cut -d "=" -f 2 | cut -d ")" -f 1)
    if [ $active -eq 3 ]; then
        new=2
    fi
    wsw --command change --profile $new
}

function dmenu-local()
{
    $HOME/.bin/dmenu-wrapper --browser "/usr/bin/firefox" --list "$DMENU_APPS" --temp "$USER_TMP" --urls "${SYNCED_CONF}urls.csv" "$@"
}

function auto-clip()
{
    source $PRIV_CONF
    auto-clipboard $PERM_LOCATION
}

function passwords()
{
    keepassx2 $PASS_FILE
}

function rebuild-now()
{
    mkdir -p $CACHE_PATH
    rm ${CACHE_PATH}*
    for line in $(print-help | cut -d " " -f 5); do
        if [[ "$line" == "$REBUILD_KEY" ]]; then
            continue
        fi
        file_name=${CACHE_PATH}$line
        echo "#/bin/bash
helper_cache $line \$@" > $file_name
        chmod u+x $file_name
    done
}

function print-help()
{
    echo "
    $DMENU_LOCAL_KEY (dmenu wrapper for local operations)
    $PASSWORD_KEY (password management)
    $REBUILD_KEY (rebuild cache)
    $AUTO_CLIP_KEY (copy an entry to the clipboard from private aliases)
    $WSW_CYCLE_KEY (cycle wsw profiles)
" | grep -v -e '^$' | sort
}

if [ ! -z $1 ]; then
    NEED_HELP=0
    case $1 in
        $WSW_CYCLE_KEY)
            cycle-wsw
            ;;
        $PASSWORD_KEY)
            passwords
            ;;
        $REBUILD_KEY)
            rebuild-now
            ;;
        $AUTO_CLIP_KEY)
            auto-clip
            ;;
        $DMENU_LOCAL_KEY)
            dmenu-local ${@:2}
            ;;
        *)
            NEED_HELP=1
            ;;
    esac
    
    if [ $NEED_HELP -eq 0 ]; then
         exit 0
    fi
fi

print-help
