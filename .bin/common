#!/bin/bash
# constants
RED_TEXT="\033[1;31m"
NORM_TEXT="\033[0m"
BASE_SERVER="blip"

# standalone files/dirs
PERM_LOCATION=$HOME/store/
SSH_AUTH_TMP=/tmp/ssh-auth.sock

# home
USER_TMP=$HOME/.tmp
SYNCED_PATH=$HOME/.synced/
HOME_CONF=$HOME/.config/
HOME_CACHE=$HOME/.cache/
HOME_PERSONAL=${HOME_CONF}personal/

# perm
CHROOT_LOCATION=${PERM_LOCATION}chroot

# syncing
PRIV_CONF=${HOME_PERSONAL}priv.aliases

# user temp
GIT_CHANGES=$USER_TMP/git.changes
PROFILE_TMP=$USER_TMP/.profile.synced.
MAIN_STATS=$USER_TMP/stats
USER_JOURNAL=$USER_TMP/journal.log

# exports
export OPENSC_CONF="$HOME/.config/opensc.conf"

# blacklist of apps to stop in bash
BASH_BLACKLIST="$USER_TMP/.bash_blacklist"
BASH_BLACKLIST_APPS="nano vi"

function enter-window-vals() {
    local word window active i
    word=$2
    window=0
    while [ $window -eq 0 ]; do
        echo "please activate the $1 window to enter the text into"
        sleep 3
        active=$(xdotool getactivewindow)
        xdotool search --class $1 | grep -q $active
        if [ $? -eq 0 ]; then
            window=1
        else
            echo "please select a $1 window"
        fi
    done
    xdotool type "$word"
    for i in ${@:3}; do
        xdotool key $i
    done
}

function _get-git-folders() {
    local res f
    res=""
    for f in $(find $1 -type d | sort); do
        if [ ! -d "$f/.git" ]; then
            continue
        fi
        res=$res" "$f
    done
    echo $res
}

function _get-workspace-objs() {
    _get-git-folders "$HOME/workspace/"
}

function _get-perm-objs() {
    _get-git-folders "${PERM_LOCATION} -maxdepth 2"
}

function _enter-linode-config() {
    enter-window-vals "termite" "configfile (hd0,1)/grub/grub.cfg" "Return"
}

function _enterbrowserkeys() {
    enter-window-vals "Developer" "$@" "Return"
}

function enterkeys() {
    if [ -z $1 ]; then
        echo "must provide input"
    else
        _enterbrowserkeys "$@"
    fi
}

function _systemstop() {
    which pamixer > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        pamixer -m
    fi
    pkill vlc
}
