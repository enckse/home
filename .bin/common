#!/bin/bash
USER_TMP=$HOME/.tmp
USER_CRYPT=$USER_TMP/crypt.img
SYNCED_PATH="$HOME/.synced/"
SYNCED_CONF=${SYNCED_PATH}/configs/
PASS_ALIASES=${USER_TMP}/pass.aliases
PERM_LOCATION=/opt/perm/
PASS_PREFIX="pass-"
SSH_SYNC_PATH=${SYNCED_PATH}ssh/
PROFILE_DEF="${USER_TMP}/profile.next"
READY="ready"
IS_CONNECTED=1
NOT_CONNECTED=0
PROXY_PORT=60000
DISPLAY_UN=/tmp/display-unlocked
DISPLAY_EN=/tmp/display-enabled
WORKPLACE_WORKING=/tmp/working
CRYPT_MNT=/mnt/crypt
SSH_KEY_PATH=${CRYPT_MNT}/ssh/
TOUCHPAD_ON=0
LAST_TMP_HIT=$USER_TMP/last.tmp
DEFAULT_REFRESH=1000
URL_COMMON=$HOME/.cache/dmenu_urls
INDEX_EXT=".index"
DMENU_ENTRIES="$USER_TMP/dmenu_cache"
DEFAULT_PING_REFRESH=10000
DEFAULT_INTERRUPT_REFRESH=500
STATUS_LOCKING_KEY="locking"
STATUS_BACKLIGHT_KEY="backlight"
STATUS_TOUCHPAD_KEY="touchpad"
STATUS_PING_KEY="ping"
SSH_AGENT_IND="$HOME/.cache/.ssh-agent-indicator"
IS_MOUNTED=1
RED_TEXT="\033[1;31m"
NORM_TEXT="\033[0m"
SSH_AUTH_TMP=/tmp/ssh-auth.sock
USER_LAST_SYNC=$USER_TMP/last-synced

function process-pass-aliases()
{
    if [ ! -e $PASS_ALIASES ]; then
        echo "source /usr/share/bash-completion/completions/pass" > $PASS_ALIASES
        idx=0
        for f in $(ls ${PERM_LOCATION} | grep "$PASS_PREFIX"); do
            f_path=${PERM_LOCATION}$f
            name="p$idx"
            echo alias $f=\"PASSWORD_STORE_DIR=$f_path PASSWORD_STORE_GIT=$f_path pass\" >> $PASS_ALIASES
            echo "_$name(){" >> $PASS_ALIASES
            echo "    PASSWORD_STORE_DIR=$f_path/ PASSWORD_STORE_GIT=$f_path/ _pass" >> $PASS_ALIASES
            echo "}" >> $PASS_ALIASES
            echo >> $PASS_ALIASES
            echo "complete -o filenames -o nospace -F _$name $f" >> $PASS_ALIASES
            idx=$((idx+1))
        done
    fi
    source $PASS_ALIASES
}

function is-mounted()
{
    mount | grep -q $1
    if [ $? -eq 0 ]; then
        echo $IS_MOUNTED
    else
        echo 0
    fi
}

function get-all-changes()
{
    git diff-index --name-only HEAD --
    git status -sb | grep 'ahead'
}

function git-changes()
{
    crypt_mnt=$(is-mounted $CRYPT_MNT)
    if [ $crypt_mnt -ne $IS_MOUNTED ]; then
        echo "mounting"
        echo -e "${RED_TEXT}    crypt not mounted${NORM_TEXT}"
    fi
    first=""
    for d in $(echo "$HOME $SYNCED_PATH /opt/perm/*"); do
        cd $d
        local_res=$(get-all-changes "$d")
        if [ ! -z "$local_res" ]; then
            if [ -z $first ]; then
                echo "uncommitted changes"
            fi
            echo -e "$d$RED_TEXT"
            echo -e "$local_res$NORM_TEXT" | sed "s/^/    /g"
            first="false"
        fi
    done
    cd $HOME
}

function ssh-agent-eval()
{
    eval $(<$SSH_AGENT_IND)
}

function socks-command()
{
    if [ -z "$1" ]; then
        echo "requires port"
        exit -1
    fi
    if [ -z "$2" ]; then
        echo "requires destination"
        exit -1
    fi
    echo "ssh -f -N -D $1 $2 -4"
}

function call-status()
{
    signal-status $1 > /dev/null
}

function signal-status()
{
    for p in $(pidof python); do
        ps $p | grep "genericon" | grep -q "$1"
        if [ $? -eq 0 ]; then
            kill -SIGUSR1 $p 
        fi
    done
}

function toggle-touchpad()
{
    INPUT_ID=$(xinput | grep "SynPS/2" | sed -n -e 's/^.*id=//p' | sed -e "s/\s/ /g" | cut -d " " -f 1)
    IS_ENABLED=$(xinput list-props $INPUT_ID | grep "Device Enabled" | cut -d ":" -f 2)
    if [ -z $1 ]; then
        if [ $IS_ENABLED -gt $TOUCHPAD_ON ]; then
            IS_ENABLED=0
        else
            IS_ENABLED=1
        fi
        xinput set-prop $INPUT_ID "Device Enabled" $IS_ENABLED
        call-status "$STATUS_TOUCHPAD_KEY"
    else
        echo $IS_ENABLED
    fi
}

function test-ssh()
{
    running=$(ssh -o BatchMode=yes -o ConnectTimeout=5 $1 echo $READY 2>&1)
    if [[ "$running" == "$READY" ]]; then
        echo $IS_CONNECTED
    else
        echo $NOT_CONNECTED
    fi
}
