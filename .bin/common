#!/bin/bash
# constants
RED_TEXT="\033[1;31m"
NORM_TEXT="\033[0m"
BASE_SERVER="blip"

# tmpfiles
SSH_AUTH_TMP=/tmp/ssh-auth.sock
USER_TMP=$HOME/.tmp
GIT_CHANGES=$USER_TMP/git.changes
PROFILE_TMP=$USER_TMP/.profile.synced.
MAIN_STATS=$USER_TMP/stats
USER_JOURNAL=$USER_TMP/journal.log
SURF_TMP=$USER_TMP/surf/
SURF_RAW=".raw"
SYS_ONLINE=$USER_TMP/.isonline
MAIL_COUNT=$USER_TMP/.mailcount

# offsets from home
PERM_LOCATION=$HOME/store/
SYNCED_PATH=$HOME/.synced/
HOME_CONF=$HOME/.config/
HOME_CACHE=$HOME/.cache/
HOME_PERSONAL=${HOME_CONF}personal/
HOME_BIN=$HOME/.bin/
CHROOT_LOCATION=${PERM_LOCATION}chroot
PRIV_CONF=${HOME_PERSONAL}priv.aliases

export OPENSC_CONF="$HOME/.config/opensc.conf"

# blacklist of apps to stop in bash
BASH_BLACKLIST="$USER_TMP/.bash_blacklist"
BASH_BLACKLIST_APPS="nano vi"

_systemstop() {
    which pamixer > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        pamixer -m
    fi
    pkill vlc
}

_mailsync() {
    local process cnt last now
    now=$USER_TMP/mailstatus.current
    process=0
    source $PRIV_CONF
    for f in $(cat ${HOME_PERSONAL}.muttrc | sed "s/^mailboxes //g" | sed "s/+//g"); do
        cnt=$(find $HOME/.mutt/imap/$f/new -type f | wc -l)
        process=$((process+cnt))
    done
    printf "%3s \xf0\x9f\x93\xa7" "$process"
    if [ -e $now ]; then
        last=$(cat $now)
        if [ $process -gt $last ]; then
            notify-send Mail "unread messages ($process)"
        fi
    fi
    echo "$process" > $now
    cp $now $MAIL_COUNT
}

_offlineimap() {
    local pids
    pids=$(pidof -x offlineimap)
    if [ -z "$pids" ]; then
        offlineimap -c ${SYNCED_PATH}mail/imap.conf
        _mailsync
    else
        echo "offlineimap already running ($pids)"
    fi
}
