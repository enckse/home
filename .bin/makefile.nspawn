TARGET=
USER=$(shell whoami)
ifeq ($(TARGET),)
    $(error TARGET is required)
endif

USER_NAME=enck
USER_HOME=home/$(USER_NAME)/

VAR_LIB=/var/lib/machines/
ETC_NSPAWN=/etc/systemd/nspawn/

CONTAINER_PATH=$(VAR_LIB)$(TARGET)/
CONTAINER_HOME=$(CONTAINER_PATH)$(USER_HOME)
CONTAINER_CONF=$(ETC_NSPAWN)$(TARGET).nspawn
CONTAINER_ROOT=$(CONTAINER_PATH)root/
CONTAINER_ETC=$(CONTAINER_PATH)etc/
CONTAINER_PROFILE=$(CONTAINER_ETC)profile.d/startup.sh

EXTRAS=python git vim termite-terminfo bash-completion go gtk2 noto-fonts go-tools dep
PACKAGES=base base-devel python $(EXTRAS)
IGNORES=--ignore linux --ignore nano --ignore linux-firmware
PACMAN_INPUTS="n\nn\n\n\nY"

PACMAN=pacman.conf
MAKEPKG=makepkg.conf
ETC_PACMAN=etc/$(PACMAN)
ETC_MAKEPKG=etc/$(MAKEPKG)
CONFIG_DIR=.config/
GIT=.gitconfig
VIM=.vim/
VIMPLUGIN=$(CONTAINER_HOME)$(VIM)
SWAP=swap
UNDO=undo
CONFIG=$(CONTAINER_HOME)$(CONFIG_DIR)
VIMRC_FILE=.vimrc
VIMRC=/$(USER_HOME)$(VIMRC_FILE)
USER_GIT=/$(USER_HOME)$(GIT)
PLUGINS=$(shell find /$(USER_HOME)$(VIM) -type f)
VIM_CONTAINER=$(CONTAINER_ROOT)$(VIM)
CACHE_START=/var/cache/.start
ALIASES=.bash_aliases
COMMON=.bin/common

.PHONY:

containeretc = install -Dm$2 /etc/$1 $(CONTAINER_ETC)$1

empty:
	$(error no command given)

root:
ifneq ($(USER), root)
	$(error must be run as root)
endif

running: root
	! machinectl status $(TARGET) &> /dev/null

create: instance refresh

instance: root
	test ! -d $(CONTAINER_PATH)
	test ! -e $(CONTAINER_CONF)
	mkdir -p $(CONTAINER_PATH)
	printf $(PACMAN_INPUTS) | pacstrap -i -c $(CONTAINER_PATH) $(PACKAGES) $(IGNORES)
	cat /$(USER_HOME)/.config/home/nspawn.template > $(CONTAINER_CONF)
	install -Dm644 /$(ETC_PACMAN) $(CONTAINER_PATH)$(ETC_PACMAN)

destroy: running
	rm -rf $(CONTAINER_PATH)
	rm -f $(CONTAINER_CONF)

refresh: running
	test -d $(CONTAINER_PATH)
	mkdir -p $(CONTAINER_HOME)
	mkdir -p $(VIMPLUGIN)
	mkdir -p $(VIMPLUGIN)$(SWAP)
	mkdir -p $(VIMPLUGIN)$(UNDO)
	mkdir -p $(CONFIG)
	mkdir -p $(CONTAINER_ROOT)$(VIM)
	mkdir -p $(VIM_CONTAINER)$(SWAP)
	mkdir -p $(VIM_CONTAINER)$(UNDO)
	install -Dm644 $(VIMRC) $(CONTAINER_HOME)$(VIMRC_FILE)
	install -Dm644 $(VIMRC) $(CONTAINER_ROOT)$(VIMRC_FILE)
	install -Dm644 $(VIMRC) $(CONTAINER_ETC)vimrc
	install -Dm644 $(USER_GIT) $(CONTAINER_ROOT)$(GIT)
	install -Dm644 $(USER_GIT) $(CONTAINER_HOME)$(GIT)
	install -Dm755 -d $(CONTAINER_HOME).cache/naaman
	install -Dm755 -d $(CONTAINER_HOME)go/src
	install -Dm644 /$(USER_HOME)$(ALIASES) $(CONTAINER_HOME)$(ALIASES)
	install -Dm644 /$(USER_HOME)$(COMMON) $(CONTAINER_HOME)$(COMMON)
	install -Dm644 /$(ETC_MAKEPKG) $(CONTAINER_PATH)$(ETC_MAKEPKG)
	$(call containeretc,passwd,644)
	$(call containeretc,group,644)
	$(call containeretc,shadow,600)
	$(call containeretc,gshadow,600)
	$(call containeretc,sudoers,440)
	$(call containeretc,locale.gen,644)
	$(call containeretc,locale.conf,644)
	rm -f $(CONTAINER_PATH)$(CACHE_START)
	@echo "DISPLAY=:0" > $(CONTAINER_ETC)environment
	@echo "#!/bin/sh" > $(CONTAINER_PROFILE)
	@echo "if [ ! -e '$(CACHE_START)' ]; then " >> $(CONTAINER_PROFILE)
	@echo "    echo ''" >> $(CONTAINER_PROFILE)
	@echo "    echo '=====NOTICE====='" >> $(CONTAINER_PROFILE)
	@echo "    echo 'performing first-time startup'" >> $(CONTAINER_PROFILE)
	@echo "    echo '=====NOTICE====='" >> $(CONTAINER_PROFILE)
	@echo "    echo ''" >> $(CONTAINER_PROFILE)
	@echo "    sudo locale-gen" >> $(CONTAINER_PROFILE)
	@echo "    for p in \$$(echo '$(EXTRAS)'); do" >> $(CONTAINER_PROFILE)
	@echo "        echo 'checking if '\$$p' is installed'" >> $(CONTAINER_PROFILE)
	@echo "        pacman -Q \$$p" >> $(CONTAINER_PROFILE)
	@echo "        if [ \$$? -ne 0 ]; then sudo pacman -S \$$p; fi" >> $(CONTAINER_PROFILE)
	@echo "	   done" >> $(CONTAINER_PROFILE)
	@echo "    sudo touch '$(CACHE_START)'" >> $(CONTAINER_PROFILE)
	@echo "fi" >> $(CONTAINER_PROFILE)
	@echo "source /"$(USER_HOME)$(ALIASES) >> $(CONTAINER_PROFILE)
	chmod uga+x $(CONTAINER_PROFILE)
	rsync -avc /$(USER_HOME)$(VIM)* $(VIMPLUGIN) --exclude=$(UNDO) --exclude=$(SWAP) --delete-after
	chown -R $(USER_NAME):$(USER_NAME) $(CONTAINER_HOME)
