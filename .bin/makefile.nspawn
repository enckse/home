TARGET            :=
ifeq ($(TARGET),)
    $(error TARGET is required)
endif

# directories/files
USER_NAME         := enck
USER_HOME         := home/$(USER_NAME)/
CONTAINER_PATH    := /var/lib/machines/$(TARGET)/
CONTAINER_HOME    := $(CONTAINER_PATH)$(USER_HOME)
CONTAINER_CONF    := /etc/systemd/nspawn/$(TARGET).nspawn
ETC644 			  := passwd group locale.gen locale.conf pacman.conf pacman.conf.include

# package settings
PACKAGES          := base-devel python git metaphyte-containers termite-terminfo go-pie gtk2 noto-fonts go-tools dep python-pycodestyle python-pydocstyle
IGNORES           := --ignore linux --ignore nano --ignore linux-firmware --ignore lvm2
PACMAN_INPUTS     :="\nY"

.PHONY:

containeretc = install -Dm$2 /etc/$1 $(CONTAINER_PATH)etc/$1

empty:
	$(error no command given)

root:
ifneq ($(shell whoami), root)
	$(error must be run as root)
endif

running: root
	! machinectl status $(TARGET) &> /dev/null

create: instance running files $(ETC644)

instance: root
	test ! -d $(CONTAINER_PATH)
	test ! -e $(CONTAINER_CONF)
	mkdir -p $(CONTAINER_PATH)
	printf $(PACMAN_INPUTS) | pacstrap -i -c $(CONTAINER_PATH) $(PACKAGES) $(IGNORES)
	cat /$(USER_HOME)/.config/home/nspawn.template > $(CONTAINER_CONF)

destroy: running
	rm -rf $(CONTAINER_PATH)
	rm -f $(CONTAINER_CONF)

files:
	mkdir -p $(CONTAINER_HOME)/{go,.bin,.cache}
	$(call containeretc,shadow,600)
	$(call containeretc,gshadow,600)
	$(call containeretc,sudoers,440)
	chown -R $(USER_NAME):$(USER_NAME) $(CONTAINER_HOME)

$(ETC644):
	$(call containeretc,$@,644)
