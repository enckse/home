#!/bin/bash
source $HOME/.bin/common
BACKLIGHT_ON="up"
BACKLIGHT_OFF="down"
FULL_BRIGHT="full"
LOW_BRIGHT="low"
MID_BRIGHT="mid"
PROFILE_CYCLE="cycle"
MAIN_DISPLAY="eDP-1"
DISP_ONE="DP-2-2"
DISP_TWO="DP-2-1"
HOME_DISP="DP-2-1"
WORKSPACE_START="startup"
WORKSPACE_RELOAD="reload"
WORKSPACE_CHANGE="change"
DEFAULT_WORKSPACE_ID=1
DOCKED_ID=2
DISP_HOLDER="DISPLAY_VALUE"
WORK_COMMON_LEFT="--output $DISP_HOLDER --auto --left-of $MAIN_DISPLAY --rotate right"
WORK_COMMON_RIGHT="--output $DISP_HOLDER --auto --right-of $MAIN_DISPLAY"
HOME_COMMON="--output $DISP_HOLDER --auto --left-of $MAIN_DISPLAY --rotate left"
HOME_WORKPLACE_ID=3

function get-lighting-help()
{
    echo "
    $1 $2 $BACKLIGHT_ON (toggle backlights ON)
    $1 $2 $BACKLIGHT_OFF (toggle backlights OFF)
    $1 $3 $LOW_BRIGHT (low brightness)
    $1 $3 $MID_BRIGHT (medium brightness)
    $1 $3 $FULL_BRIGHT (full brightness)
    $1 $4 $PROFILE_CYCLE (profile cycling)
    "
}

# Get displays, first argument can filter out any displays
function get-displays()
{
    get-all-displays " "
}

function get-all-displays()
{
    xrandr | grep "${1}connected" | cut -d " " -f 1
}

# Toggle backlighting up/down to a specified level
function toggle-backlighting()
{
    case $1 in
        $BACKLIGHT_ON | $FULL_BRIGHT)
            SETTING=1.0
            ;;
        $BACKLIGHT_OFF | $LOW_BRIGHT)
            SETTING=0.3
            ;;
        $MID_BRIGHT)
            SETTING=0.9
            ;;
        *)
            echo "Unknown command $1"
            ;;
    esac
    
    if [ ! -z "$SETTING" ]; then
        DISPLAYS=$(get-displays)
        for disp in ${DISPLAYS[@]}; do
            xrandr --output $disp --brightness $SETTING
        done
    fi
}

function replace-and-execute()
{
    VAL="xrandr "$(echo "$1" | sed "s/$DISP_HOLDER/$2/g")
    eval $VAL
}

function set-workplace()
{
    ALL_DISPLAYS=$(get-all-displays | grep -v "$MAIN_DISPLAY")
    has_side=0
    for disp in $ALL_DISPLAYS; do
        xrandr --output $disp --off
        xrandr | grep -q "^$disp connected"
        if [ $? -eq 0 ]; then
            has_side=1
        fi
    done
    xrandr --output $MAIN_DISPLAY --primary --auto
    use_setting=$1
    if [ $has_side -eq 0 ]; then
        use_setting=$DEFAULT_WORKSPACE_ID
    fi
    rm -f $TRAY_SET
    i3_commands tray_reload 
    case $use_setting in
        $DOCKED_ID | $HOME_WORKPLACE_ID)
            case $use_setting in
                $DOCKED_ID)
                    replace-and-execute "$WORK_COMMON_LEFT" "$DISP_ONE"
                    replace-and-execute "$WORK_COMMON_RIGHT" "$DISP_TWO"
                    ;;
                $HOME_WORKPLACE_ID)
                    replace-and-execute "$HOME_COMMON" "$HOME_DISP"
                    ;;
            esac
            rm -f $WORKPLACE_WORKING
            ;;
        *)
            touch $WORKPLACE_WORKING
            ;;
    esac
    toggle-backlighting $MID_BRIGHT
    if [ $1 -eq $use_setting ]; then
        i3 restart
    fi
}

# Workspace help
function get-workspace-help()
{
    echo "
    $1 $2 $DEFAULT_WORKSPACE_ID (force default workspace)
    $1 $2 $DOCKED_ID (force docked workspace)
    $1 $2 $HOME_WORKPLACE_ID (change to home workspace)
    "
}

function force-workplace()
{
    set-workplace $1
    xsetroot -solid "#333333"
}
