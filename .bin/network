#!/bin/bash
NETWORKS=/etc/networks/
CACHED=/var/cache/network
LIST_KEY="list"
HELP_KEY="help"
EXIT_KEY="exit"

_iplink() {
    ip link set $1 $2
    echo "setting $1 -> $2"
}

_connect() {
    local conf device flags
    flags=""
    device=$(echo "$1" | cut -d "/" -f 1)
    conf=$NETWORKS$1.conf
    pkill wpa_supplicant
    _iplink "$device" "up"
    echo "$device" | grep -q "^e"
    if [ $? -eq 0 ]; then
        flags="-D wired"
    fi
    if [ -e $conf ]; then
        if [ -s $conf ]; then
            echo "running supplicant"
            /bin/bash -c "/usr/bin/wpa_supplicant -c $conf -i $device $flags"
        fi
    fi
    echo "connected: $1"
}

networks=$(find $NETWORKS -type f | sed "s#$NETWORKS##g" | sed "s/\.conf//g" | tr '\n' ' ')
action=$1
case $action in
    "$EXIT_KEY")
        pkill wpa_supplicant
        sleep 3
        touch /var/cache/networkill
        ;;
    "$HELP_KEY")
        echo "$networks $HELP_KEY $LIST_KEY $RELOAD_KEY" | sort
        ;;
    "$LIST_KEY")
        echo "$networks"
        ;;
    *)
        echo "$networks" | tr ' ' '\n' | grep -q "$action"
        if [ $? -eq 0 ]; then
            if [ ! -z "$action" ]; then
                echo "$action" > $CACHED
            fi
        else
            if [ -e $CACHED ]; then
                for a in $(echo "$networks" | tr ' ' '\n' | cut -d "/" -f 1 | sort -u); do
                    _iplink "$a" "down"
                done
                last=$(cat $CACHED)
                _connect $last
            fi
        fi
        ;;
esac
