diff --git a/vftool/main.m b/vftool/main.m
index 2e1f528..04e13d1 100644
--- a/vftool/main.m
+++ b/vftool/main.m
@@ -33,7 +33,7 @@ struct disc_info {
 /* ******************************************************************** */
 /* PTY management*/
 
-static int createPty(bool waitForConnection)
+static int createPty(bool waitForConnection, NSString *ttyFile)
 {
     struct termios tos;
     char ptsn[PATH_MAX];
@@ -61,7 +61,18 @@ static int createPty(bool waitForConnection)
     fcntl(tty_fd, F_SETFL, f | O_NONBLOCK);
 
     NSLog(@"+++ fd %d connected to %s\n", tty_fd, ptsn);
-    
+    if (ttyFile) {
+        NSFileManager *fileManager = [NSFileManager defaultManager];
+        NSError *error = NULL;
+        NSString *ptsnStr = [NSString stringWithFormat:@"%s", ptsn];
+        BOOL success = [ptsnStr writeToFile:ttyFile atomically:YES encoding:NSUTF8StringEncoding error:&error];
+        if (!success) {
+            NSLog(@"failed to write ttyfile");
+            NSLog(@"%@", error);
+            return -1;
+        }
+    }
+
     if (waitForConnection) {
         // Causes a HUP:
         close(open(ptsn, O_RDWR | O_NOCTTY));
@@ -96,7 +107,8 @@ static VZVirtualMachineConfiguration *getVMConfig(unsigned int mem_size_mb,
                                                   NSString *initrd_path,
                                                   struct disc_info *dinfo,
                                                   unsigned int num_discs,
-                                                  NSString *bridged_eth)
+                                                  NSString *bridged_eth,
+                                                  NSString *tty_file)
 {
     /* **************************************************************** */
     /* Linux bootloader setup:
@@ -134,7 +146,7 @@ static VZVirtualMachineConfiguration *getVMConfig(unsigned int mem_size_mb,
     int ifd = 0, ofd = 1;
 
     if (console_type == 1) {
-        int pty = createPty(true);
+        int pty = createPty(true, tty_file);
         if (pty < 0) {
             NSLog(@"--- Error creating pty for serial console!\n");
             return nil;
@@ -228,6 +240,7 @@ static void usage(const char *me)
                     "\t-p <number of processors>        (Default 1)\n"
                     "\t-m <memory size in MB>           (Default 512MB)\n"
                     "\t-t <tty type>                    (0 = stdio, 1 = pty (default))\n"
+                    "\t-y <file to store the used tty>\n"
                     "\n\tSpecify multiple discs with multiple -d/-c options, in order (max %d)\n",
                     me, MAX_DISCS);
 }
@@ -242,6 +255,7 @@ int main(int argc, char *argv[])
         NSString *disc_path = NULL;
         NSString *cdrom_path = NULL;
         NSString *eth_if = NULL;
+        NSString *tty_file = NULL;
         unsigned int cpus = 0;
         unsigned int mem = 0;
         unsigned int tty_type = 1;
@@ -250,7 +264,7 @@ int main(int argc, char *argv[])
         unsigned int num_discs = 0;
 
         int ch;
-        while ((ch = getopt(argc, argv, "k:a:i:d:c:b:p:m:t:h")) != -1) {
+        while ((ch = getopt(argc, argv, "k:a:i:d:c:b:p:m:t:y:h")) != -1) {
             switch (ch) {
                 case 'k':
                     kern_path = [NSString stringWithUTF8String:optarg];
@@ -289,7 +303,9 @@ int main(int argc, char *argv[])
                         return 1;
                     }
                     break;
-
+                case 'y':
+                    tty_file = [NSString stringWithUTF8String:optarg];
+                    break;
                 case 'h':
                 default:
                     usage(argv[0]);
@@ -323,7 +339,8 @@ int main(int argc, char *argv[])
         VZVirtualMachineConfiguration *conf = getVMConfig(mem, cpus, tty_type, cmdline,
                                                           kern_path, initrd_path,
                                                           dinfo, num_discs,
-                                                          eth_if);
+                                                          eth_if,
+                                                          tty_file);
  
         if (!conf) {
             NSLog(@"Couldn't create configuration for VM.\n");
